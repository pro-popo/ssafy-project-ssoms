{"remainingRequest":"D:\\s03p31b303\\frontend\\node_modules\\babel-loader\\lib\\index.js!D:\\s03p31b303\\frontend\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\s03p31b303\\frontend\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\s03p31b303\\frontend\\src\\views\\Socket.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\s03p31b303\\frontend\\src\\views\\Socket.vue","mtime":1604537926251},{"path":"D:\\s03p31b303\\frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\s03p31b303\\frontend\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\s03p31b303\\frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\s03p31b303\\frontend\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9vYmplY3RTcHJlYWQgZnJvbSAiRDovczAzcDMxYjMwMy9mcm9udGVuZC9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vb2JqZWN0U3ByZWFkMiI7Ci8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCmltcG9ydCBTdG9tcCBmcm9tICJ3ZWJzdG9tcC1jbGllbnQiOwppbXBvcnQgU29ja0pTIGZyb20gInNvY2tqcy1jbGllbnQiOwppbXBvcnQgU0VSVkVSIGZyb20gIkAvYXBpL3NwcmluZy5qcyI7CmltcG9ydCBheGlvcyBmcm9tICJheGlvcyI7CmltcG9ydCB7IG1hcE11dGF0aW9ucyB9IGZyb20gInZ1ZXgiOwpleHBvcnQgZGVmYXVsdCB7CiAgbmFtZTogIlNvY2tldCIsCiAgZGF0YTogZnVuY3Rpb24gZGF0YSgpIHsKICAgIHJldHVybiB7CiAgICAgIHVzZXJOYW1lOiAiIiwKICAgICAgbWVzc2FnZTogIiIsCiAgICAgIHJlY3ZMaXN0OiBbXSwKICAgICAgdGVzdExpc3Q6IFtdCiAgICB9OwogIH0sCiAgY3JlYXRlZDogZnVuY3Rpb24gY3JlYXRlZCgpIHsKICAgIC8vIEFwcC52dWXqsIAg7IOd7ISx65CY66m0IOyGjOy8kyDsl7DqsrDsnYQg7Iuc64+E7ZWp64uI64ukLgogICAgdGhpcy5jb25uZWN0KCk7CiAgICBheGlvcy5nZXQoU0VSVkVSLlVSTCArICIvU29ja2V0L3Rlc3QiKS50aGVuKGZ1bmN0aW9uICgpIHsKICAgICAgY29uc29sZS5sb2coIuyXsOqysCIpOwogICAgfSkuY2F0Y2goZnVuY3Rpb24gKGVycikgewogICAgICByZXR1cm4gY29uc29sZS5sb2coZXJyKTsKICAgIH0pOwogIH0sCiAgbWV0aG9kczogX29iamVjdFNwcmVhZCh7CiAgICBjb25uZWN0OiBmdW5jdGlvbiBjb25uZWN0KCkgewogICAgICB2YXIgX3RoaXMgPSB0aGlzOwoKICAgICAgdmFyIHNlcnZlclVSTCA9ICJodHRwOi8vbG9jYWxob3N0OjgwODAvc3NvbXMvc3RvbXAiOwogICAgICB2YXIgc29ja2V0ID0gbmV3IFNvY2tKUyhzZXJ2ZXJVUkwpOwogICAgICB0aGlzLnN0b21wQ2xpZW50ID0gU3RvbXAub3Zlcihzb2NrZXQpOyAvLyBjb25zb2xlLmxvZyhg7IaM7LyTIOyXsOqysOydhCDsi5zrj4Ttlanri4jri6QuIOyEnOuyhCDso7zshow6ICR7c2VydmVyVVJMfWApOwoKICAgICAgdGhpcy5zdG9tcENsaWVudC5jb25uZWN0KHt9LCBmdW5jdGlvbiAoZnJhbWUpIHsKICAgICAgICAvLyDshozsvJMg7Jew6rKwIOyEseqztQogICAgICAgIF90aGlzLmNvbm5lY3RlZCA9IHRydWU7CiAgICAgICAgY29uc29sZS5sb2coIuyGjOy8kyDsl7DqsrAg7ISx6rO1IiwgZnJhbWUpOyAvLyDshJzrsoTsnZgg66mU7Iuc7KeAIOyghOyGoSBlbmRwb2ludOulvCDqtazrj4Xtlanri4jri6QuCiAgICAgICAgLy8g7J2065+w7ZiV7YOc66W8IHB1YiBzdWIg6rWs7KGw65286rOgIO2VqeuLiOuLpC4KICAgICAgICAvLyAgdGhpcy5zdG9tcENsaWVudC5zdWJzY3JpYmUoIi9zZW5kRGF0YSIsIHJlcyA9PiB7CiAgICAgICAgLy8gICAgY29uc29sZS5sb2coJ+q1rOuPheycvOuhnCDrsJvsnYAg66mU7Iuc7KeAIOyeheuLiOuLpC4nLCByZXMuYm9keSk7CiAgICAgICAgLy8gICAgLy8g67Cb7J2AIOuNsOydtO2EsOulvCBqc29u7Jy866GcIO2MjOyLse2VmOqzoCDrpqzsiqTtirjsl5Ag64Sj7Ja07KSN64uI64ukLgogICAgICAgIC8vICAgIHRoaXMucmVjdkxpc3QucHVzaChKU09OLnBhcnNlKHJlcy5ib2R5KSkKICAgICAgICAvLyAgfSk7CiAgICAgICAgLy8gc3Vic2NyaWJlIG1lc3NhZ2UKCiAgICAgICAgX3RoaXMuc3RvbXBDbGllbnQuc3Vic2NyaWJlKCIvc2VuZERhdGEvc2NoZWR1bGVyTSIsIGZ1bmN0aW9uIChyZXMpIHsKICAgICAgICAgIF90aGlzLnJlY3ZMaXN0LnB1c2goSlNPTi5wYXJzZShyZXMuYm9keSkpOwoKICAgICAgICAgIGNvbnNvbGUubG9nKCI9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09Iik7CiAgICAgICAgICBjb25zb2xlLmxvZyhfdGhpcy5yZWN2TGlzdFtfdGhpcy5yZWN2TGlzdC5sZW5ndGggLSAxXS5PcmFjbGVTdGFzdGljcy5kYXRhYmFzZUNwdVRpbWVSYXRpbyk7CiAgICAgICAgICBjb25zb2xlLmxvZyhfdGhpcy5yZWN2TGlzdC5sZW5ndGggLSAxKTsKICAgICAgICAgIGNvbnNvbGUubG9nKCI9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09Iik7CiAgICAgICAgfSk7CiAgICAgIH0sIGZ1bmN0aW9uIChlcnJvcikgewogICAgICAgIC8vIOyGjOy8kyDsl7DqsrAg7Iuk7YyoCiAgICAgICAgY29uc29sZS5sb2coIuyGjOy8kyDsl7DqsrAg7Iuk7YyoIiwgZXJyb3IpOwogICAgICAgIF90aGlzLmNvbm5lY3RlZCA9IGZhbHNlOwogICAgICB9KTsKICAgIH0KICB9LCBtYXBNdXRhdGlvbnMoIk9yYWNsZSIsIFsiU0VUX0xJU1QiXSkpLAogIHdhdGNoOiB7CiAgICByZWN2TGlzdDogZnVuY3Rpb24gcmVjdkxpc3QoKSB7CiAgICAgIC8vIHRoaXMuJHN0b3JlLnRoaXMudGVzdExpc3QucHVzaCgKICAgICAgLy8gdGhpcy5yZWN2TGlzdFt0aGlzLnJlY3ZMaXN0Lmxlbmd0aCAtIDFdLk9yYWNsZVN0YXN0aWNzCiAgICAgIC8vICAgLmRhdGFiYXNlQ3B1VGltZVJhdGlvCiAgICAgIC8vICk7CiAgICAgIHRoaXMuU0VUX0xJU1QodGhpcy5yZWN2TGlzdFt0aGlzLnJlY3ZMaXN0Lmxlbmd0aCAtIDFdLk9yYWNsZVN0YXN0aWNzKTsKICAgIH0KICB9Cn07"},{"version":3,"sources":["Socket.vue"],"names":[],"mappings":";;;;;;;;;;;;;AAaA,OAAA,KAAA,MAAA,iBAAA;AACA,OAAA,MAAA,MAAA,eAAA;AACA,OAAA,MAAA,MAAA,iBAAA;AACA,OAAA,KAAA,MAAA,OAAA;AAEA,SAAA,YAAA,QAAA,MAAA;AAEA,eAAA;AACA,EAAA,IAAA,EAAA,QADA;AAEA,EAAA,IAFA,kBAEA;AACA,WAAA;AACA,MAAA,QAAA,EAAA,EADA;AAEA,MAAA,OAAA,EAAA,EAFA;AAGA,MAAA,QAAA,EAAA,EAHA;AAIA,MAAA,QAAA,EAAA;AAJA,KAAA;AAMA,GATA;AAUA,EAAA,OAVA,qBAUA;AACA;AACA,SAAA,OAAA;AACA,IAAA,KAAA,CACA,GADA,CACA,MAAA,CAAA,GAAA,GAAA,cADA,EAEA,IAFA,CAEA,YAAA;AACA,MAAA,OAAA,CAAA,GAAA,CAAA,IAAA;AACA,KAJA,EAKA,KALA,CAKA,UAAA,GAAA;AAAA,aAAA,OAAA,CAAA,GAAA,CAAA,GAAA,CAAA;AAAA,KALA;AAMA,GAnBA;AAoBA,EAAA,OAAA;AACA,IAAA,OADA,qBACA;AAAA;;AACA,UAAA,SAAA,GAAA,mCAAA;AACA,UAAA,MAAA,GAAA,IAAA,MAAA,CAAA,SAAA,CAAA;AACA,WAAA,WAAA,GAAA,KAAA,CAAA,IAAA,CAAA,MAAA,CAAA,CAHA,CAIA;;AACA,WAAA,WAAA,CAAA,OAAA,CACA,EADA,EAEA,UAAA,KAAA,EAAA;AACA;AACA,QAAA,KAAA,CAAA,SAAA,GAAA,IAAA;AACA,QAAA,OAAA,CAAA,GAAA,CAAA,UAAA,EAAA,KAAA,EAHA,CAIA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;AACA,QAAA,KAAA,CAAA,WAAA,CAAA,SAAA,CAAA,sBAAA,EAAA,UAAA,GAAA,EAAA;AACA,UAAA,KAAA,CAAA,QAAA,CAAA,IAAA,CAAA,IAAA,CAAA,KAAA,CAAA,GAAA,CAAA,IAAA,CAAA;;AACA,UAAA,OAAA,CAAA,GAAA,CAAA,iCAAA;AACA,UAAA,OAAA,CAAA,GAAA,CACA,KAAA,CAAA,QAAA,CAAA,KAAA,CAAA,QAAA,CAAA,MAAA,GAAA,CAAA,EAAA,cAAA,CACA,oBAFA;AAIA,UAAA,OAAA,CAAA,GAAA,CAAA,KAAA,CAAA,QAAA,CAAA,MAAA,GAAA,CAAA;AACA,UAAA,OAAA,CAAA,GAAA,CAAA,iCAAA;AACA,SATA;AAUA,OAzBA,EA0BA,UAAA,KAAA,EAAA;AACA;AACA,QAAA,OAAA,CAAA,GAAA,CAAA,UAAA,EAAA,KAAA;AACA,QAAA,KAAA,CAAA,SAAA,GAAA,KAAA;AACA,OA9BA;AAgCA;AAtCA,KAuCA,YAAA,CAAA,QAAA,EAAA,CAAA,UAAA,CAAA,CAvCA,CApBA;AA6DA,EAAA,KAAA,EAAA;AACA,IAAA,QAAA,EAAA,oBAAA;AACA;AACA;AACA;AACA;AACA,WAAA,QAAA,CAAA,KAAA,QAAA,CAAA,KAAA,QAAA,CAAA,MAAA,GAAA,CAAA,EAAA,cAAA;AACA;AAPA;AA7DA,CAAA","sourcesContent":["<template>\r\n  <div id=\"app\">\r\n    <!-- <div\r\n      v-for=\"(item, idx) in recvList\"\r\n      :key=\"idx\"\r\n    >\r\n      <h3>{{ item }}</h3>\r\n    </div> -->\r\n    {{ testList }}\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport Stomp from \"webstomp-client\";\r\nimport SockJS from \"sockjs-client\";\r\nimport SERVER from \"@/api/spring.js\";\r\nimport axios from \"axios\";\r\n\r\nimport { mapMutations } from \"vuex\";\r\n\r\nexport default {\r\n  name: \"Socket\",\r\n  data() {\r\n    return {\r\n      userName: \"\",\r\n      message: \"\",\r\n      recvList: [],\r\n      testList: []\r\n    };\r\n  },\r\n  created() {\r\n    // App.vue가 생성되면 소켓 연결을 시도합니다.\r\n    this.connect();\r\n    axios\r\n      .get(SERVER.URL + \"/Socket/test\")\r\n      .then(() => {\r\n        console.log(\"연결\");\r\n      })\r\n      .catch((err) => console.log(err));\r\n  },\r\n  methods: {\r\n    connect() {\r\n      const serverURL = \"http://localhost:8080/ssoms/stomp\";\r\n      let socket = new SockJS(serverURL);\r\n      this.stompClient = Stomp.over(socket);\r\n      // console.log(`소켓 연결을 시도합니다. 서버 주소: ${serverURL}`);\r\n      this.stompClient.connect(\r\n        {},\r\n        (frame) => {\r\n          // 소켓 연결 성공\r\n          this.connected = true;\r\n          console.log(\"소켓 연결 성공\", frame);\r\n          // 서버의 메시지 전송 endpoint를 구독합니다.\r\n          // 이런형태를 pub sub 구조라고 합니다.\r\n          //  this.stompClient.subscribe(\"/sendData\", res => {\r\n          //    console.log('구독으로 받은 메시지 입니다.', res.body);\r\n          //    // 받은 데이터를 json으로 파싱하고 리스트에 넣어줍니다.\r\n          //    this.recvList.push(JSON.parse(res.body))\r\n          //  });\r\n\r\n          // subscribe message\r\n          this.stompClient.subscribe(\"/sendData/schedulerM\", (res) => {\r\n            this.recvList.push(JSON.parse(res.body));\r\n            console.log(\"===============================\");\r\n            console.log(\r\n              this.recvList[this.recvList.length - 1].OracleStastics\r\n                .databaseCpuTimeRatio\r\n            );\r\n            console.log(this.recvList.length - 1);\r\n            console.log(\"===============================\");\r\n          });\r\n        },\r\n        (error) => {\r\n          // 소켓 연결 실패\r\n          console.log(\"소켓 연결 실패\", error);\r\n          this.connected = false;\r\n        }\r\n      );\r\n    },\r\n    ...mapMutations(\"Oracle\", [\"SET_LIST\"])\r\n  },\r\n  watch: {\r\n    recvList: function() {\r\n      // this.$store.this.testList.push(\r\n      // this.recvList[this.recvList.length - 1].OracleStastics\r\n      //   .databaseCpuTimeRatio\r\n      // );\r\n      this.SET_LIST(this.recvList[this.recvList.length - 1].OracleStastics);\r\n    }\r\n  }\r\n};\r\n</script>\r\n"],"sourceRoot":"src/views"}]}