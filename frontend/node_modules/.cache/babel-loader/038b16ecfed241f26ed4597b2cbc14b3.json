{"remainingRequest":"D:\\s03p31b303\\frontend\\node_modules\\babel-loader\\lib\\index.js!D:\\s03p31b303\\frontend\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\s03p31b303\\frontend\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\s03p31b303\\frontend\\src\\views\\admin\\Schema.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\s03p31b303\\frontend\\src\\views\\admin\\Schema.vue","mtime":1604931830526},{"path":"D:\\s03p31b303\\frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\s03p31b303\\frontend\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\s03p31b303\\frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\s03p31b303\\frontend\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuZmluZCI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLmFycmF5LmluZGV4LW9mIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkubWFwIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuc3BsaWNlIjsKLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KaW1wb3J0IGF4aW9zIGZyb20gImF4aW9zIjsKaW1wb3J0IFNFUlZFUiBmcm9tICJAL2FwaS9zcHJpbmcuanMiOwpleHBvcnQgZGVmYXVsdCB7CiAgbmFtZTogIlNjaGVtYSIsCiAgZGF0YTogZnVuY3Rpb24gZGF0YSgpIHsKICAgIHJldHVybiB7CiAgICAgIHNjaGVtYUxpc3Q6IFtdLAogICAgICB1c2VySUQ6ICIiCiAgICB9OwogIH0sCiAgbWV0aG9kczogewogICAgZGVsZXRlU2NoZW1hOiBmdW5jdGlvbiBkZWxldGVTY2hlbWEoc2NoZW1hSWQpIHsKICAgICAgdmFyIF90aGlzID0gdGhpczsKCiAgICAgIHZhciBpdGVtVG9GaW5kID0gdGhpcy5zY2hlbWFMaXN0LmZpbmQoZnVuY3Rpb24gKGl0ZW0pIHsKICAgICAgICByZXR1cm4gaXRlbS51c2VySUQgPT09IHNjaGVtYUlkOwogICAgICB9KTsKICAgICAgdmFyIGlkeCA9IHRoaXMuc2NoZW1hTGlzdC5pbmRleE9mKGl0ZW1Ub0ZpbmQpOwoKICAgICAgaWYgKGlkeCA+IC0xKSB7CiAgICAgICAgdGhpcy5zY2hlbWFMaXN0LnNwbGljZShpZHgsIDEpOwogICAgICB9CgogICAgICBheGlvcy5wb3N0KFNFUlZFUi5VUkwgKyBTRVJWRVIuUk9VVEVTLnNldFNldHRpbmdzU2NoZW1hLCB0aGlzLnNjaGVtYUxpc3QpLnRoZW4oZnVuY3Rpb24gKHJlcykgewogICAgICAgIGNvbnNvbGUubG9nKHJlcy5kYXRhLnJlc3VsdCk7CgogICAgICAgIGlmIChyZXMuZGF0YS5yZXN1bHQgPT09ICJzYXZlU3VjY2VzcyIpIHsKICAgICAgICAgIGFsZXJ0KCLsiqTtgqTrp4jqsIAg7ISx6rO17KCB7Jy866GcIOyCreygnOuQmOyXiOyKteuLiOuLpC4iKTsKICAgICAgICB9CgogICAgICAgIF90aGlzLnVzZXJJRCA9ICIiOwogICAgICB9KS5jYXRjaChmdW5jdGlvbiAoZXJyKSB7CiAgICAgICAgcmV0dXJuIGNvbnNvbGUubG9nKGVycik7CiAgICAgIH0pOwogICAgfSwKICAgIGdldFNldHRpbmdzU2NoZW1hOiBmdW5jdGlvbiBnZXRTZXR0aW5nc1NjaGVtYSgpIHsKICAgICAgdmFyIF90aGlzMiA9IHRoaXM7CgogICAgICBheGlvcy5nZXQoU0VSVkVSLlVSTCArIFNFUlZFUi5ST1VURVMuZ2V0U2V0dGluZ3NTY2hlbWEpLnRoZW4oZnVuY3Rpb24gKHJlcykgewogICAgICAgIF90aGlzMi5zY2hlbWFMaXN0ID0gcmVzLmRhdGEubWFwLnNjaGVtYTsKICAgICAgfSkuY2F0Y2goZnVuY3Rpb24gKGVycikgewogICAgICAgIHJldHVybiBjb25zb2xlLmxvZyhlcnIpOwogICAgICB9KTsKICAgIH0sCiAgICBzYXZlU2NoZW1hOiBmdW5jdGlvbiBzYXZlU2NoZW1hKCkgewogICAgICB2YXIgX3RoaXMzID0gdGhpczsKCiAgICAgIC8vIOykkeuztSDrsI8g7KG07J6s7Jes67aAIO2ZleyduAogICAgICBheGlvcy5wb3N0KFNFUlZFUi5VUkwgKyBTRVJWRVIuUk9VVEVTLmNoZWNrU2V0dGluZ3NTY2hlbWEsIHsKICAgICAgICB1c2VySUQ6IHRoaXMudXNlcklECiAgICAgIH0pLnRoZW4oZnVuY3Rpb24gKHJlcykgewogICAgICAgIGNvbnNvbGUubG9nKCIxIiwgcmVzLmRhdGEucmVzdWx0KTsKCiAgICAgICAgaWYgKHJlcy5kYXRhLnJlc3VsdCA9PT0gImR1cGxpY2F0ZSIpIHsKICAgICAgICAgIGFsZXJ0KCLsnbTrr7gg7KG07J6s7ZWY64qUIOyKpO2CpOuniCBJRCDsnoXri4jri6QuIik7CiAgICAgICAgfSBlbHNlIGlmIChyZXMuZGF0YS5yZXN1bHQgPT09ICJub3RFeGlzdCIpIHsKICAgICAgICAgIGFsZXJ0KCJEQuyXkCDsobTsnqztlZjsp4Ag7JWK64qUIOyKpO2CpOuniCBJRCDsnoXri4jri6QuIik7CiAgICAgICAgfSBlbHNlIGlmIChyZXMuZGF0YS5yZXN1bHQgPT09ICJzdWNjZXNzIikgewogICAgICAgICAgLy8g7KGw6rG0IOunjOyhsSDtm4QsIOyKpO2CpOuniCDsoIDsnqUKICAgICAgICAgIF90aGlzMy5zY2hlbWFMaXN0LnB1c2goewogICAgICAgICAgICB1c2VySUQ6IF90aGlzMy51c2VySUQKICAgICAgICAgIH0pOwoKICAgICAgICAgIGF4aW9zLnBvc3QoU0VSVkVSLlVSTCArIFNFUlZFUi5ST1VURVMuc2V0U2V0dGluZ3NTY2hlbWEsIF90aGlzMy5zY2hlbWFMaXN0KS50aGVuKGZ1bmN0aW9uIChyZXMpIHsKICAgICAgICAgICAgY29uc29sZS5sb2cocmVzLmRhdGEucmVzdWx0KTsKCiAgICAgICAgICAgIGlmIChyZXMuZGF0YS5yZXN1bHQgPT09ICJzYXZlU3VjY2VzcyIpIHsKICAgICAgICAgICAgICBhbGVydCgi7Iqk7YKk66eI66W8IOyEseqzteyggeycvOuhnCDstpTqsIDtlZjsmIDsirXri4jri6QuIik7CiAgICAgICAgICAgIH0KCiAgICAgICAgICAgIF90aGlzMy51c2VySUQgPSAiIjsKICAgICAgICAgIH0pLmNhdGNoKGZ1bmN0aW9uICgpIHsKICAgICAgICAgICAgcmV0dXJuIGNvbnNvbGUubG9nKCLsi6TtjKgiKTsKICAgICAgICAgIH0pOwogICAgICAgIH0KICAgICAgfSkuY2F0Y2goZnVuY3Rpb24gKGVycikgewogICAgICAgIHJldHVybiBjb25zb2xlLmxvZyhlcnIpOwogICAgICB9KTsKICAgIH0KICB9LAogIGNyZWF0ZWQ6IGZ1bmN0aW9uIGNyZWF0ZWQoKSB7CiAgICB0aGlzLmdldFNldHRpbmdzU2NoZW1hKCk7CiAgfQp9Ow=="},{"version":3,"sources":["Schema.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\r\n  <div>\r\n    <h2 class=\"mb-3\">Schema 설정</h2>\r\n    <div class=\"schema-searchbar\">\r\n      <span class=\"mdi mdi-magnify\"></span>\r\n      <v-text-field label=\"검색할 스키마명을 입력해주세요.\"></v-text-field>\r\n    </div>\r\n    <div class=\"schema-box\">\r\n      <div\r\n        class=\"schema-list-admin\"\r\n        v-for=\"schema in schemaList\"\r\n        :key=\"schema.userID\"\r\n      >\r\n        <ol>\r\n          {{\r\n            schema.userID\r\n          }}\r\n          <button @click=\"deleteSchema(schema.userID)\">삭제</button>\r\n        </ol>\r\n        <hr />\r\n      </div>\r\n    </div>\r\n    <div class=\"mt-7\">\r\n      <span style=\"font-size:25px; color:gray;\">Schema |</span>\r\n    </div>\r\n    <div class=\"setting-schema-data\">\r\n      <span class=\"setting-schemaID-font\">ID</span>\r\n      <v-text-field\r\n        label=\"스키마ID를 입력해주세요.\"\r\n        v-model=\"userID\"\r\n      ></v-text-field>\r\n    </div>\r\n    <v-btn\r\n      color=\"primary\"\r\n      class=\"setting-schema-save-button\"\r\n      @click=\"saveSchema\"\r\n    >\r\n      저장\r\n    </v-btn>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport axios from \"axios\";\r\nimport SERVER from \"@/api/spring.js\";\r\n\r\nexport default {\r\n  name: \"Schema\",\r\n  data() {\r\n    return {\r\n      schemaList: [],\r\n      userID: \"\"\r\n    };\r\n  },\r\n  methods: {\r\n    deleteSchema(schemaId) {\r\n      const itemToFind = this.schemaList.find(function(item) {\r\n        return item.userID === schemaId;\r\n      });\r\n      const idx = this.schemaList.indexOf(itemToFind);\r\n      if (idx > -1) {\r\n        this.schemaList.splice(idx, 1);\r\n      }\r\n      axios\r\n        .post(SERVER.URL + SERVER.ROUTES.setSettingsSchema, this.schemaList)\r\n        .then((res) => {\r\n          console.log(res.data.result);\r\n          if (res.data.result === \"saveSuccess\") {\r\n            alert(\"스키마가 성공적으로 삭제되었습니다.\");\r\n          }\r\n          this.userID = \"\";\r\n        })\r\n        .catch((err) => console.log(err));\r\n    },\r\n    getSettingsSchema() {\r\n      axios\r\n        .get(SERVER.URL + SERVER.ROUTES.getSettingsSchema)\r\n        .then((res) => {\r\n          this.schemaList = res.data.map.schema;\r\n        })\r\n        .catch((err) => console.log(err));\r\n    },\r\n    saveSchema() {\r\n      // 중복 및 존재여부 확인\r\n      axios\r\n        .post(SERVER.URL + SERVER.ROUTES.checkSettingsSchema, {\r\n          userID: this.userID\r\n        })\r\n        .then((res) => {\r\n          console.log(\"1\", res.data.result);\r\n          if (res.data.result === \"duplicate\") {\r\n            alert(\"이미 존재하는 스키마 ID 입니다.\");\r\n          } else if (res.data.result === \"notExist\") {\r\n            alert(\"DB에 존재하지 않는 스키마 ID 입니다.\");\r\n          } else if (res.data.result === \"success\") {\r\n            // 조건 만족 후, 스키마 저장\r\n            this.schemaList.push({ userID: this.userID });\r\n            axios\r\n              .post(\r\n                SERVER.URL + SERVER.ROUTES.setSettingsSchema,\r\n                this.schemaList\r\n              )\r\n              .then((res) => {\r\n                console.log(res.data.result);\r\n                if (res.data.result === \"saveSuccess\") {\r\n                  alert(\"스키마를 성공적으로 추가하였습니다.\");\r\n                }\r\n                this.userID = \"\";\r\n              })\r\n              .catch(() => console.log(\"실패\"));\r\n          }\r\n        })\r\n        .catch((err) => console.log(err));\r\n    }\r\n  },\r\n  created() {\r\n    this.getSettingsSchema();\r\n  }\r\n};\r\n</script>\r\n\r\n<style>\r\n.setting-schema-data {\r\n  width: 700px;\r\n  display: flex;\r\n  line-height: 65px;\r\n}\r\n.schema-searchbar {\r\n  display: flex;\r\n  width: 500px;\r\n  line-height: 65px;\r\n  margin-bottom: 25px;\r\n}\r\n.schema-list-admin {\r\n  font-size: 15px;\r\n}\r\n.schema-list-admin ol {\r\n  padding-top: 7px;\r\n  margin-bottom: 7px;\r\n}\r\n.schema-list-admin > ol > button {\r\n  float: right;\r\n  margin-right: 10px;\r\n}\r\n.schema-box {\r\n  overflow: scroll;\r\n  overflow-x: hidden;\r\n  width: 800px;\r\n  height: 200px;\r\n  border: 2px solid gray;\r\n}\r\n.schema-box hr {\r\n  margin: 0px;\r\n}\r\n.setting-schemaID-font {\r\n  font-size: 20px;\r\n  margin-right: 20px;\r\n}\r\n.setting-schemaPassword-font {\r\n  font-size: 20px;\r\n  margin-right: 73px;\r\n}\r\n.setting-schema-save-button {\r\n  margin-top: 10px;\r\n  margin-right: 50px;\r\n  padding: 15px 20px !important;\r\n  font-size: 15px !important;\r\n  float: right;\r\n}\r\n</style>\r\n"],"sourceRoot":"src/views/admin"}]}