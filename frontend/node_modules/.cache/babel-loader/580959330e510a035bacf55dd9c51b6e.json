{"remainingRequest":"D:\\s03p31b303\\frontend\\node_modules\\babel-loader\\lib\\index.js!D:\\s03p31b303\\frontend\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\s03p31b303\\frontend\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\s03p31b303\\frontend\\src\\components\\realtime-monitoring\\oracle-status\\OracleCpu.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\s03p31b303\\frontend\\src\\components\\realtime-monitoring\\oracle-status\\OracleCpu.vue","mtime":1605858570519},{"path":"D:\\s03p31b303\\frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\s03p31b303\\frontend\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\s03p31b303\\frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\s03p31b303\\frontend\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["OracleCpu.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\r\n  <div class=\"oracle-cpu\">\r\n    <div\r\n      :class=\"{ 'oracle-cpu-card1': !isMainView, 'oracle-cpu-card1-extend': isMainView}\"\r\n    >\r\n      <v-card elevation=\"2\">\r\n        <v-card-text style=\"height: 100%; display: flex\">\r\n          <div class=\"oracle-title-icon\">\r\n            <!-- <v-icon id=\"chart-title-icon\" size=\"18\" dark\r\n              >mdi-desktop-classic</v-icon\r\n            > -->\r\n            <h3 class=\"oracle-status-name\">CPU & Wait Time</h3>\r\n            <div style=\"margin: 0px 25px 0px auto\">\r\n              <v-btn icon small @click=\"$emit('changeMainView')\">\r\n                <v-icon>\r\n                  {{\r\n                    isMainView ? \"mdi-arrow-top-left\" : \"mdi-arrow-bottom-right\"\r\n                  }}\r\n                </v-icon>\r\n              </v-btn>\r\n              <v-menu offset-y attach>\r\n                <template v-slot:activator=\"{ attrs, on }\">\r\n                  <v-btn small icon v-bind=\"attrs\" v-on=\"on\">\r\n                    <v-icon>mdi-dots-vertical</v-icon>\r\n                  </v-btn>\r\n                </template>\r\n                <div style=\"background: white\">\r\n                  <v-btn-toggle\r\n                    group\r\n                    mandatory\r\n                    color=\"#039BE5\"\r\n                    v-model=\"toggle_exclusive\"\r\n                    style=\"display: flex; flex-direction: column\"\r\n                  >\r\n                    <v-btn small icon @click=\"changeChart('bar')\"\r\n                      ><v-icon>mdi-chart-bar</v-icon></v-btn\r\n                    >\r\n                    <v-btn small icon @click=\"changeChart('line')\"\r\n                      ><v-icon>mdi-chart-line</v-icon></v-btn\r\n                    >\r\n                    <v-btn small icon @click=\"changeChart('areaspline')\"\r\n                      ><v-icon>mdi-chart-areaspline-variant</v-icon></v-btn\r\n                    >\r\n                  </v-btn-toggle>\r\n                </div>\r\n              </v-menu>\r\n            </div>\r\n          </div>\r\n\r\n          <div style=\"height: 100%; width: 70%\">\r\n            <div style=\"height: 100%\" @click=\"clickChart\">\r\n              <IEcharts\r\n                :option=\"option\"\r\n                style=\"padding-top: 5px\"\r\n                :resizable=\"true\"\r\n              />\r\n            </div>\r\n          </div>\r\n          <div style=\"height: 95%; width: 30%\">\r\n            <IEcharts\r\n              :option=\"gauge\"\r\n              style=\"margin-top: 30px\"\r\n              :resizable=\"true\"\r\n            />\r\n          </div>\r\n        </v-card-text>\r\n      </v-card>\r\n    </div>\r\n    <div class=\"oracle-cpu-card2\" v-show=\"!isMainView\">\r\n      <div class=\"oracle-cpu-card2-2\">\r\n        <v-card elevation=\"2\">\r\n          <v-card-text class=\"oracle-cpu-data\">\r\n            <v-icon color=\"white\">mdi-timeline-clock</v-icon>\r\n            <div\r\n              style=\"\r\n                display: flex;\r\n                flex-direction: column;\r\n                justify-contents: center;\r\n              \"\r\n            >\r\n              <h4>Response Time Per Transaction</h4>\r\n              <h1>\r\n                {{ getResponesTimePerTxn[selectedRealTime] }}\r\n                <span class=\"oracle-cpu-unit\">sec</span>\r\n                <div style=\"height: 50%\">\r\n                  <IEcharts\r\n                    :option=\"small1\"\r\n                    class=\"small-chart\"\r\n                    :resizable=\"true\"\r\n                  />\r\n                </div>\r\n              </h1>\r\n            </div>\r\n            <span></span>\r\n          </v-card-text>\r\n        </v-card>\r\n\r\n        <v-card elevation=\"2\">\r\n          <v-card-text class=\"oracle-cpu-data\">\r\n            <v-icon color=\"white\">mdi-connection</v-icon>\r\n            <div>\r\n              <h4>Active Serial Sessions</h4>\r\n              <h1>\r\n                <span>{{ getActiveSerialSessions[selectedRealTime] }}</span>\r\n                <span class=\"oracle-cpu-unit\">count</span>\r\n                <div style=\"height: 50%; width: auto\" class=\"small-chart\">\r\n                  <IEcharts :option=\"small2\" :resizable=\"true\" />\r\n                </div>\r\n              </h1>\r\n            </div>\r\n            <span></span>\r\n          </v-card-text>\r\n        </v-card>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport IEcharts from \"vue-echarts-v3/src/full.js\";\r\nimport { mapGetters, mapMutations } from \"vuex\";\r\n\r\nexport default {\r\n  name: \"OracleCpu\",\r\n  components: {\r\n    IEcharts,\r\n  },\r\n  props: {\r\n    isMainView: Boolean,\r\n  },\r\n  methods: {\r\n    clickChart() {\r\n      this.SET_SELECTED_TOOLTIP(\"oracle\");\r\n      this.SET_SETTING_SELECTED(true);\r\n    },\r\n    ...mapMutations([\r\n      \"SET_SELECTED_REALTIME\",\r\n      \"SET_SETTING_SELECTED\",\r\n      \"SET_SELECTED_TOOLTIP\",\r\n    ]),\r\n    changeXaxis(params) {\r\n      setTimeout(\r\n        function () {\r\n          if (this.selectedTooltip == \"oracle\") {\r\n            var setTime = 0;\r\n            if (!this.getIsSelected) {\r\n              setTime = 100;\r\n            }\r\n            setTimeout(\r\n              function () {\r\n                if (params.seriesData[0] !== undefined && this.getIsSelected) {\r\n                  this.SET_SELECTED_REALTIME(params.seriesData[0].dataIndex);\r\n                } else {\r\n                  this.SET_SELECTED_REALTIME(this.getRealTimeList.length - 1);\r\n                }\r\n              }.bind(this),\r\n              setTime\r\n            );\r\n          }\r\n        }.bind(this),\r\n        200\r\n      );\r\n    },\r\n\r\n    changeChart(type) {\r\n      console.log(type);\r\n      let areaStyle = null;\r\n      if (type == \"areaspline\") {\r\n        areaStyle = \"\";\r\n        type = \"line\";\r\n      }\r\n      if (type == \"bar\") {\r\n        this.option.xAxis.boundaryGap = true;\r\n        this.option.tooltip.axisPointer.type = \"shadow\";\r\n      } else {\r\n        this.option.xAxis.boundaryGap = false;\r\n        this.option.tooltip.axisPointer.type = \"line\";\r\n      }\r\n      let cnt = 0;\r\n      this.option.series.forEach((element) => {\r\n        element.type = type;\r\n        element.areaStyle = areaStyle;\r\n        element.color = this.option.color[cnt++];\r\n      });\r\n    },\r\n    selectedAxis() {\r\n      this.SET_SETTING_SELECTED(true);\r\n      this.testData = true;\r\n    },\r\n  },\r\n  computed: {\r\n    ...mapGetters(\"Oracle\", [\r\n      \"getDatabaseCpuTimeRatioList\",\r\n      \"getDatabaseWaitTimeRatio\",\r\n      \"getResponesTimePerTxn\",\r\n      \"getActiveSerialSessions\",\r\n    ]),\r\n    ...mapGetters([\r\n      \"getRealTimeList\",\r\n      \"selectedRealTime\",\r\n      \"getIsSelected\",\r\n      \"getIsRealShow\",\r\n      \"selectedTooltip\",\r\n    ]),\r\n  },\r\n\r\n  watch: {\r\n    selectedRealTime: function (res) {\r\n      this.gauge.series[0].data[0].value = this.getDatabaseCpuTimeRatioList[\r\n        this.selectedRealTime\r\n      ];\r\n      // res는 변한 값\r\n      this.option.xAxis.axisPointer.value = res;\r\n    },\r\n    getDatabaseCpuTimeRatioList: function () {\r\n      this.option.series[0].data = this.getDatabaseCpuTimeRatioList;\r\n      this.option.series[1].data = this.getDatabaseWaitTimeRatio;\r\n      // this.gauge.series[0].data[0].value = this.getDatabaseCpuTimeRatioList[\r\n      //   this.getDatabaseCpuTimeRatioList.length - 1\r\n      // ];\r\n\r\n      // this.pie.series[0].data[0].value = this.getDatabaseCpuTimeRatioList[\r\n      //   this.getDatabaseCpuTimeRatioList.length - 1\r\n      // ];\r\n      // this.pie.series[0].data[1].value = this.getDatabaseWaitTimeRatio[\r\n      //   this.getDatabaseWaitTimeRatio.length - 1\r\n      // ];\r\n\r\n      this.option.xAxis.data = this.getRealTimeList;\r\n      this.small1.xAxis.data = this.getRealTimeList;\r\n      this.small2.xAxis.data = this.getRealTimeList;\r\n\r\n      this.small1.series[0].data = this.getResponesTimePerTxn;\r\n      this.small2.series[0].data = this.getActiveSerialSessions;\r\n\r\n      this.gauge.series[0].data[0].value = this.getDatabaseCpuTimeRatioList[\r\n        this.selectedRealTime\r\n      ];\r\n    }\r\n  },\r\n  data() {\r\n    return {\r\n      activeSerialSessions: [],\r\n      toggle_exclusive: 2,\r\n      testData: false,\r\n      option: {\r\n        color: [\"#b1d3ff\", \"#075aff\"],\r\n        grid: {\r\n          right: 20,\r\n          left: 50,\r\n          bottom: 25,\r\n          top: 65,\r\n        },\r\n        // title: { text: \"CPU Time\" },\r\n        xAxis: {\r\n          type: \"category\",\r\n          boundaryGap: false,\r\n          data: [],\r\n          triggerEvent: true,\r\n          axisLine: {\r\n            lineStyle: {\r\n              color: \"#303030\",\r\n            },\r\n          },\r\n          axisPointer: {\r\n            handle: {\r\n              show: true,\r\n              size: [0, 0],\r\n            },\r\n            value: this.selectedRealTime,\r\n          },\r\n          // triggerEvent: true\r\n          // formatter: function(params, callback) {\r\n          //   console.log(callback);\r\n          //   this.test(params);\r\n          // }.bind(this)\r\n          // axisTick: {\r\n          //   show: false\r\n          // }\r\n        },\r\n        yAxis: {\r\n          name: \"(%)\",\r\n          type: \"value\",\r\n          max: 100,\r\n          axisLine: {\r\n            lineStyle: {\r\n              color: \"#303030\",\r\n            },\r\n          },\r\n          axisTick: {\r\n            show: false,\r\n          },\r\n        },\r\n        legend: {\r\n          data: [\"CpuTime\", \"WaitTime\"],\r\n          icon: \"roundRect\",\r\n          // top: \"30\r\n        },\r\n        methods: {},\r\n        tooltip: {\r\n          trigger: \"axis\",\r\n          triggerOn: \"click\",\r\n          // alwaysShowContent: true,\r\n          axisPointer: {\r\n            type: \"line\",\r\n            label: {\r\n              background: \"#000000\",\r\n              show: true,\r\n              snap: true,\r\n              formatter: function (params) {\r\n                this.changeXaxis(params);\r\n                return params.value;\r\n              }.bind(this),\r\n            },\r\n          },\r\n        },\r\n        series: [\r\n          {\r\n            name: \"CpuTime\",\r\n            data: [],\r\n            areaStyle: \"\",\r\n            type: \"line\",\r\n            showSymbol: false,\r\n          },\r\n          {\r\n            name: \"WaitTime\",\r\n            data: [],\r\n            areaStyle: \"\",\r\n            type: \"line\",\r\n            showSymbol: false,\r\n          },\r\n        ],\r\n      },\r\n      gauge: {\r\n        series: [\r\n          {\r\n            name: \"CpuTime\",\r\n            type: \"gauge\",\r\n            detail: {\r\n              formatter: \"{value}%\",\r\n              show: true,\r\n              color: \"#6440e3\",\r\n              offsetCenter: [\"0\", \"45%\"],\r\n              fontSize: 22,\r\n              fontWeight: \"bold\",\r\n            },\r\n            data: [\r\n              {\r\n                value: 0,\r\n                name: \"CpuTime\",\r\n              },\r\n            ],\r\n            radius: \"75%\",\r\n            startAngle: 180,\r\n            endAngle: 0,\r\n            splitNumber: 5,\r\n            axisLine: {\r\n              show: true,\r\n              lineStyle: {\r\n                color: [\r\n                  [0.4, \"#e34a6d\"],\r\n                  [0.8, \"#4358c3\"],\r\n                  [1, \"#67abf6\"],\r\n                ],\r\n              },\r\n            },\r\n            splitLine: {\r\n              show: true,\r\n            },\r\n            axisTick: {\r\n              show: true,\r\n              splitNumber: 2,\r\n              length: 6,\r\n            },\r\n            axisLabel: {\r\n              show: true,\r\n              distance: -53,\r\n            },\r\n            pointer: {\r\n              show: true,\r\n              length: \"50%\",\r\n              width: 6,\r\n            },\r\n            itemStyle: {\r\n              color: \"rgba(85, 85, 85, 1)\",\r\n            },\r\n            title: {\r\n              show: true,\r\n              offsetCenter: [0, \"75%\"],\r\n              color: \"rgba(143, 143, 143, 1)\",\r\n              fontSize: 12,\r\n              fontWeight: \"bold\",\r\n            },\r\n            markPoint: {\r\n              data: [\r\n                {\r\n                  type: \"max\",\r\n                },\r\n              ],\r\n            },\r\n            animationEasing: \"backOut\",\r\n          },\r\n        ],\r\n      },\r\n      small1: {\r\n        grid: {\r\n          right: 10,\r\n          left: 10,\r\n          bottom: 0,\r\n          top: 15,\r\n        },\r\n        xAxis: {\r\n          type: \"category\",\r\n          boundaryGap: false,\r\n          data: [],\r\n          splitLine: {\r\n            show: false,\r\n          },\r\n          show: false,\r\n        },\r\n        yAxis: {\r\n          type: \"value\",\r\n          splitLine: {\r\n            show: false,\r\n          },\r\n          show: false,\r\n        },\r\n        tooltip: {\r\n          trigger: \"axis\",\r\n          axisPointer: {\r\n            type: \"none\",\r\n          },\r\n        },\r\n        series: [\r\n          {\r\n            name: \"ResponseTimePerTransaction\",\r\n            data: [],\r\n            type: \"line\",\r\n            color: \"#67abf6\",\r\n            showSymbol: false,\r\n            areaStyle: \"\",\r\n          },\r\n        ],\r\n      },\r\n      small2: {\r\n        grid: {\r\n          right: 10,\r\n          left: 10,\r\n          bottom: 0,\r\n          top: 15,\r\n        },\r\n        xAxis: {\r\n          type: \"category\",\r\n          boundaryGap: false,\r\n          data: [],\r\n          splitLine: {\r\n            show: false,\r\n          },\r\n          show: false,\r\n        },\r\n        yAxis: {\r\n          type: \"value\",\r\n          splitLine: {\r\n            show: false,\r\n          },\r\n          show: false,\r\n        },\r\n        tooltip: {\r\n          trigger: \"axis\",\r\n          axisPointer: {\r\n            type: \"none\",\r\n          },\r\n        },\r\n        series: [\r\n          {\r\n            name: \"ActiveSerialSessions\",\r\n            data: [],\r\n            type: \"line\",\r\n            color: \"#67abf6\",\r\n            showSymbol: false,\r\n            areaStyle: \"\",\r\n          },\r\n        ],\r\n      },\r\n    };\r\n  },\r\n};\r\n</script>\r\n\r\n<style>\r\n.oracle-cpu {\r\n  display: flex;\r\n  height: 100%;\r\n}\r\n.oracle-cpu-card1 {\r\n  width: 75%;\r\n  margin-right: 15px;\r\n}\r\n.oracle-cpu-card1-extend {\r\n  width: 100%;\r\n}\r\n.oracle-cpu-card1 .v-card {\r\n  height: 100%;\r\n  width: 100%;\r\n}\r\n.oracle-cpu-card1-extend .v-card {\r\n  height: 100%;\r\n  width: 100%;\r\n}\r\n\r\n.oracle-cpu-card2 {\r\n  width: 25%;\r\n  display: flex;\r\n}\r\n\r\n.oracle-cpu-card2-1 .v-card {\r\n  height: 100%;\r\n  width: 100%;\r\n}\r\n.oracle-cpu-card2-1 {\r\n  width: 30%;\r\n  margin-left: 15px;\r\n}\r\n\r\n.oracle-cpu-card2-2 {\r\n  display: flex;\r\n  flex-direction: column;\r\n  width: 100%;\r\n  height: 100%;\r\n}\r\n.oracle-cpu-card2-2 .v-card:nth-child(1) {\r\n  margin-bottom: 15px;\r\n}\r\n\r\n.oracle-cpu-card2-2 .v-card {\r\n  height: 50%;\r\n  width: 100%;\r\n}\r\n\r\n.oracle-cpu-data {\r\n  height: 100%;\r\n  display: flex;\r\n  align-items: center;\r\n  overflow: hidden;\r\n}\r\n.oracle-cpu-data > .v-icon {\r\n  width: 9vh;\r\n  height: 90%;\r\n  background: linear-gradient(\r\n    to bottom right,\r\n    var(--main-color),\r\n    var(--main-point-color)\r\n  );\r\n  border-radius: 8px;\r\n  margin-right: 16px;\r\n  font-size: 1.5rem;\r\n}\r\n\r\n.oracle-cpu-data h1 {\r\n  color: #6440e3;\r\n  display: flex;\r\n  align-items: flex-end;\r\n}\r\n.oracle-cpu-unit {\r\n  margin: 1px 0px 0px 5px;\r\n  font-size: 1.4rem;\r\n  color: var(--main-point-color);\r\n}\r\n.oracle-unit {\r\n  font-size: 1.4rem;\r\n  color: var(--main-point-color);\r\n}\r\n.v-menu__content {\r\n  margin: 5px 0px 0px -4px !important;\r\n}\r\n</style>\r\n"],"sourceRoot":"src/components/realtime-monitoring/oracle-status"}]}