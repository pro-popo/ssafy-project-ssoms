{"remainingRequest":"D:\\s03p31b303\\frontend\\node_modules\\babel-loader\\lib\\index.js!D:\\s03p31b303\\frontend\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\s03p31b303\\frontend\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\s03p31b303\\frontend\\src\\components\\realtime-monitoring\\query\\AllSchemaTopQuery.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\s03p31b303\\frontend\\src\\components\\realtime-monitoring\\query\\AllSchemaTopQuery.vue","mtime":1605678186925},{"path":"D:\\s03p31b303\\frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\s03p31b303\\frontend\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\s03p31b303\\frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\s03p31b303\\frontend\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9vYmplY3RTcHJlYWQgZnJvbSAiRDovczAzcDMxYjMwMy9mcm9udGVuZC9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vb2JqZWN0U3ByZWFkMiI7Ci8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCmltcG9ydCB7IG1hcEdldHRlcnMsIG1hcFN0YXRlLCBtYXBNdXRhdGlvbnMgfSBmcm9tICJ2dWV4IjsKaW1wb3J0IEFsbFNjaGVtYVRvcFF1ZXJ5RGV0YWlsIGZyb20gIkAvY29tcG9uZW50cy9yZWFsdGltZS1tb25pdG9yaW5nL3F1ZXJ5L0FsbFNjaGVtYVRvcFF1ZXJ5RGV0YWlsLnZ1ZSI7CmV4cG9ydCBkZWZhdWx0IHsKICBuYW1lOiAiQWxsU2NoZW1hVG9wUXVlcnkiLAogIGNvbXBvbmVudHM6IHsKICAgIEFsbFNjaGVtYVRvcFF1ZXJ5RGV0YWlsOiBBbGxTY2hlbWFUb3BRdWVyeURldGFpbAogIH0sCiAgZGF0YTogZnVuY3Rpb24gZGF0YSgpIHsKICAgIHJldHVybiB7CiAgICAgIGNsaWNrUm93OiAtMQogICAgfTsKICB9LAogIG1ldGhvZHM6IF9vYmplY3RTcHJlYWQoewogICAgZ2V0UXVlcnlEZXRhaWw6IGZ1bmN0aW9uIGdldFF1ZXJ5RGV0YWlsKHNlbGVjdGVkUmVhbFRpbWUsIGluZGV4KSB7CiAgICAgIHZhciB0ckxpc3QgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgiYWxsU2NoZW1hVG9wUXVlcnlUYWJsZSIpLmdldEVsZW1lbnRzQnlUYWdOYW1lKCJ0ciIpOwogICAgICBpZiAodGhpcy5jbGlja1JvdyAhPSAtMSkgdHJMaXN0W3RoaXMuY2xpY2tSb3cgKyAxXS5jbGFzc0xpc3QucmVtb3ZlKCJyZWFsLXF1ZXJ5LWNsaWNrLXRyIik7CiAgICAgIHRyTGlzdFtpbmRleCArIDFdLmNsYXNzTGlzdC5hZGQoInJlYWwtcXVlcnktY2xpY2stdHIiKTsKICAgICAgdGhpcy5jbGlja1JvdyA9IGluZGV4OwogICAgICB0aGlzLlNFVF9UT1BRVUVSWV9ERVRBSUwoW3NlbGVjdGVkUmVhbFRpbWUsIGluZGV4XSk7CiAgICB9CiAgfSwgbWFwTXV0YXRpb25zKCJUb3BRdWVyeSIsIFsiU0VUX1RPUFFVRVJZX0RFVEFJTCJdKSksCiAgY29tcHV0ZWQ6IF9vYmplY3RTcHJlYWQoX29iamVjdFNwcmVhZChfb2JqZWN0U3ByZWFkKHt9LCBtYXBHZXR0ZXJzKCJUb3BRdWVyeSIsIFsiZ2V0VG9wUXVlcnlMaXN0Il0pKSwgbWFwU3RhdGUoIlRvcFF1ZXJ5IiwgWyJ3YXRjaCJdKSksIG1hcEdldHRlcnMoWyJzZWxlY3RlZFJlYWxUaW1lIl0pKSwKICB3YXRjaDogewogICAgZ2V0VG9wUXVlcnlMaXN0OiBmdW5jdGlvbiBnZXRUb3BRdWVyeUxpc3QoKSB7CiAgICAgIHRoaXMuZ2V0UXVlcnlEZXRhaWwodGhpcy5zZWxlY3RlZFJlYWxUaW1lLCB0aGlzLmNsaWNrUm93KTsKICAgIH0KICB9Cn07"},{"version":3,"sources":["AllSchemaTopQuery.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAkDA,SAAA,UAAA,EAAA,QAAA,EAAA,YAAA,QAAA,MAAA;AACA,OAAA,uBAAA,MAAA,oEAAA;AAEA,eAAA;AACA,EAAA,IAAA,EAAA,mBADA;AAEA,EAAA,UAAA,EAAA;AACA,IAAA,uBAAA,EAAA;AADA,GAFA;AAKA,EAAA,IALA,kBAKA;AACA,WAAA;AACA,MAAA,QAAA,EAAA,CAAA;AADA,KAAA;AAGA,GATA;AAWA,EAAA,OAAA;AACA,IAAA,cADA,0BACA,gBADA,EACA,KADA,EACA;AACA,UAAA,MAAA,GAAA,QAAA,CACA,cADA,CACA,wBADA,EAEA,oBAFA,CAEA,IAFA,CAAA;AAGA,UAAA,KAAA,QAAA,IAAA,CAAA,CAAA,EACA,MAAA,CAAA,KAAA,QAAA,GAAA,CAAA,CAAA,CAAA,SAAA,CAAA,MAAA,CAAA,qBAAA;AAEA,MAAA,MAAA,CAAA,KAAA,GAAA,CAAA,CAAA,CAAA,SAAA,CAAA,GAAA,CAAA,qBAAA;AACA,WAAA,QAAA,GAAA,KAAA;AAEA,WAAA,mBAAA,CAAA,CAAA,gBAAA,EAAA,KAAA,CAAA;AACA;AAZA,KAaA,YAAA,CAAA,UAAA,EAAA,CAAA,qBAAA,CAAA,CAbA,CAXA;AA0BA,EAAA,QAAA,gDACA,UAAA,CAAA,UAAA,EAAA,CAAA,iBAAA,CAAA,CADA,GAEA,QAAA,CAAA,UAAA,EAAA,CAAA,OAAA,CAAA,CAFA,GAGA,UAAA,CAAA,CAAA,kBAAA,CAAA,CAHA,CA1BA;AA+BA,EAAA,KAAA,EAAA;AACA,IAAA,eAAA,EAAA,2BAAA;AACA,WAAA,cAAA,CAAA,KAAA,gBAAA,EAAA,KAAA,QAAA;AACA;AAHA;AA/BA,CAAA","sourcesContent":["<template>\r\n  <div>\r\n    <h2 class=\"mb-3 mt-3\">\r\n      All Schema'<span style=\"margin-left:3px\" />s CPU Top Query\r\n    </h2>\r\n    <v-simple-table\r\n      fixed-header\r\n      height=\"285px\"\r\n      class=\"elevation-2 realtime-top-query\"\r\n      id=\"allSchemaTopQueryTable\"\r\n    >\r\n      <template v-slot:default>\r\n        <thead style=\"border-radiu\">\r\n          <tr>\r\n            <th class=\"text-center topquery-table-th\">\r\n              Rank\r\n            </th>\r\n            <th class=\"text-left topquery-table-th\">\r\n              SQL ID\r\n            </th>\r\n            <th class=\"text-left topquery-table-th\">\r\n              SQL\r\n            </th>\r\n            <th class=\"text-left topquery-table-th\">\r\n              Schema Name\r\n            </th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          <tr\r\n            v-for=\"(query, index) in getTopQueryList[selectedRealTime]\"\r\n            :key=\"index\"\r\n            @click=\"getQueryDetail(selectedRealTime, index)\"\r\n            class=\"real-query-hover\"\r\n          >\r\n            <td class=\"text-center\" style=\"width:70px\">{{ index + 1 }}</td>\r\n            <td>{{ query.sqlId }}</td>\r\n            <td align=\"left\" class=\"query-table-sql\">\r\n              {{ query.sql }}\r\n            </td>\r\n            <td>{{ query.parsingSchemaName }}</td>\r\n          </tr>\r\n        </tbody>\r\n      </template>\r\n    </v-simple-table>\r\n    <AllSchemaTopQueryDetail class=\"top-query-right\" />\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { mapGetters, mapState, mapMutations } from \"vuex\";\r\nimport AllSchemaTopQueryDetail from \"@/components/realtime-monitoring/query/AllSchemaTopQueryDetail.vue\";\r\n\r\nexport default {\r\n  name: \"AllSchemaTopQuery\",\r\n  components: {\r\n    AllSchemaTopQueryDetail\r\n  },\r\n  data() {\r\n    return {\r\n      clickRow: -1\r\n    };\r\n  },\r\n\r\n  methods: {\r\n    getQueryDetail(selectedRealTime, index) {\r\n      const trList = document\r\n        .getElementById(\"allSchemaTopQueryTable\")\r\n        .getElementsByTagName(\"tr\");\r\n      if (this.clickRow != -1)\r\n        trList[this.clickRow + 1].classList.remove(\"real-query-click-tr\");\r\n\r\n      trList[index + 1].classList.add(\"real-query-click-tr\");\r\n      this.clickRow = index;\r\n\r\n      this.SET_TOPQUERY_DETAIL([selectedRealTime, index]);\r\n    },\r\n    ...mapMutations(\"TopQuery\", [\"SET_TOPQUERY_DETAIL\"])\r\n  },\r\n  computed: {\r\n    ...mapGetters(\"TopQuery\", [\"getTopQueryList\"]),\r\n    ...mapState(\"TopQuery\", [\"watch\"]),\r\n    ...mapGetters([\"selectedRealTime\"])\r\n  },\r\n  watch: {\r\n    getTopQueryList: function() {\r\n      this.getQueryDetail(this.selectedRealTime, this.clickRow);\r\n    }\r\n  }\r\n};\r\n</script>\r\n\r\n<style>\r\n.real-query-click-tr {\r\n  background: rgb(214, 214, 214);\r\n}\r\n.realtime-top-query {\r\n  width: 100%;\r\n}\r\n.real-query-hover:hover {\r\n  cursor: pointer;\r\n}\r\n\r\n.topquery-table-th {\r\n  color: white !important;\r\n  background: #414141 !important;\r\n}\r\n.topquery-table-th:nth-child(1) {\r\n  border-top-left-radius: 5px !important;\r\n}\r\n.query-table-sql {\r\n  max-width: 600px;\r\n  overflow: hidden;\r\n  text-overflow: ellipsis;\r\n  white-space: nowrap;\r\n}\r\n</style>\r\n"],"sourceRoot":"src/components/realtime-monitoring/query"}]}