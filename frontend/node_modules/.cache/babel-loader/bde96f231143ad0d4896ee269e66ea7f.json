{"remainingRequest":"D:\\s03p31b303\\frontend\\node_modules\\babel-loader\\lib\\index.js!D:\\s03p31b303\\frontend\\node_modules\\eslint-loader\\index.js??ref--13-0!D:\\s03p31b303\\frontend\\src\\store\\modules\\schema.js","dependencies":[{"path":"D:\\s03p31b303\\frontend\\src\\store\\modules\\schema.js","mtime":1605454471613},{"path":"D:\\s03p31b303\\frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\s03p31b303\\frontend\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\s03p31b303\\frontend\\node_modules\\eslint-loader\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["D:/s03p31b303/frontend/src/store/modules/schema.js"],"names":["axios","SERVER","Schema","namespaced","state","schemaList","realTimeSchemaList","executions","cpuTimeTot","elapsedTimeTot","bufferGetsAvg","selectedSchema","schemaData","sqlCnt","diskReadsAvg","rowsProcessedAvg","cpuTimeAvg","cpuTimeMax","elapsedTimeAvg","elapsedTimeMax","timeAndCpuList","time","cpu","check","ani_flag","pastTimeData","allSchemaStastics","oracleStatus","schemas","radarchart","getters","getSchemaList","SelectedSchema","getSchemaData","getRealTimeSchemaList1","getRealTimeSchemaList2","getRealTimeSchemaList3","getRealTimeSchemaList4","getSchemaLength","length","getTimeAndCpuList","getPastTimeData","mutations","SET_SCHEMA_LIST","data","SET_SELECTED_SCHEMA","SET_REALTIME_SCHEMA_LIST","i","push","name","parsingSchemaName","a","b","shift","SET_TIME_AND_CPU_LIST","times","cpus","forEach","element","databaseCpuTimeRatio","SET_PAST_TIME_DATA","tempstat","tempsch","list","radar","value","bufferGets","actions","getSettingSchema","commit","get","URL","ROUTES","getSettingsSchema","then","res","map","schema","setTimeAndCpuList","dispatch","start","end","getPastData","result","alert","catch","err","console","log","setPastTimeData","date","realTimeMonitoring"],"mappings":"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","sourcesContent":["import axios from \"axios\";\r\nimport SERVER from \"@/api/spring.js\";\r\nconst Schema = {\r\n  namespaced: true,\r\n  state: {\r\n    schemaList: [],\r\n    realTimeSchemaList: {\r\n      executions: [],\r\n      cpuTimeTot: [],\r\n      elapsedTimeTot: [],\r\n      bufferGetsAvg: []\r\n    },\r\n    selectedSchema: \"\",\r\n    schemaData: {\r\n      sqlCnt: [861],\r\n      executions: [214059],\r\n      bufferGetsAvg: [153],\r\n      diskReadsAvg: [0],\r\n      rowsProcessedAvg: [2],\r\n      cpuTimeAvg: [0],\r\n      cpuTimeMax: [123],\r\n      cpuTimeTot: [0],\r\n      elapsedTimeAvg: [0],\r\n      elapsedTimeMax: [123],\r\n      elapsedTimeTot: [0]\r\n    },\r\n    timeAndCpuList: {\r\n      time: [],\r\n      cpu: [],\r\n      check: false,\r\n      ani_flag: false\r\n    },\r\n    pastTimeData: {\r\n      allSchemaStastics: [],\r\n      oracleStatus: {},\r\n      schemas: [],\r\n      schemaList: [],\r\n      radarchart: [],\r\n      check: false\r\n    }\r\n  },\r\n  getters: {\r\n    getSchemaList: (state) => state.schemaList,\r\n    SelectedSchema: (state) => state.selectedSchema,\r\n    getSchemaData: (state) => state.schemaData,\r\n    getRealTimeSchemaList1: (state) => state.realTimeSchemaList.executions,\r\n    getRealTimeSchemaList2: (state) => state.realTimeSchemaList.cpuTimeTot,\r\n    getRealTimeSchemaList3: (state) => state.realTimeSchemaList.elapsedTimeTot,\r\n    getRealTimeSchemaList4: (state) => state.realTimeSchemaList.bufferGetsAvg,\r\n    getSchemaLength: (state) => state.schemaList.length,\r\n    getTimeAndCpuList: (state) => state.timeAndCpuList,\r\n    getPastTimeData: (state) => state.pastTimeData\r\n  },\r\n  mutations: {\r\n    SET_SCHEMA_LIST(state, data) {\r\n      state.schemaList = data;\r\n    },\r\n    SET_SELECTED_SCHEMA(state, data) {\r\n      state.selectedSchema = data;\r\n    },\r\n    SET_REALTIME_SCHEMA_LIST(state, data) {\r\n      if (state.realTimeSchemaList.executions.length === 0) {\r\n        for (var i = 0; i < data.length; i++) {\r\n          state.realTimeSchemaList.executions.push({\r\n            name: data[i].parsingSchemaName,\r\n            data: [data[i].executions]\r\n          });\r\n          state.realTimeSchemaList.cpuTimeTot.push({\r\n            name: data[i].parsingSchemaName,\r\n            data: [data[i].cpuTimeTot]\r\n          });\r\n          state.realTimeSchemaList.elapsedTimeTot.push({\r\n            name: data[i].parsingSchemaName,\r\n            data: [data[i].elapsedTimeTot]\r\n          });\r\n          state.realTimeSchemaList.bufferGetsAvg.push({\r\n            name: data[i].parsingSchemaName,\r\n            data: [data[i].bufferGetsAvg]\r\n          });\r\n        }\r\n      } else {\r\n        for (var a = 0; a < data.length; a++) {\r\n          for (var b = 0; b < state.realTimeSchemaList.executions.length; b++) {\r\n            if (\r\n              state.realTimeSchemaList.executions[b].name ===\r\n              data[a].parsingSchemaName\r\n            ) {\r\n              state.realTimeSchemaList.executions[b].data.push(\r\n                data[a].executions\r\n              );\r\n              state.realTimeSchemaList.cpuTimeTot[b].data.push(\r\n                data[a].cpuTimeTot\r\n              );\r\n              state.realTimeSchemaList.elapsedTimeTot[b].data.push(\r\n                data[a].elapsedTimeTot\r\n              );\r\n              state.realTimeSchemaList.bufferGetsAvg[b].data.push(\r\n                data[a].bufferGetsAvg\r\n              );\r\n              if (state.realTimeSchemaList.executions[b].data.length > 12) {\r\n                state.realTimeSchemaList.executions[b].data.shift();\r\n                state.realTimeSchemaList.cpuTimeTot[b].data.shift();\r\n                state.realTimeSchemaList.elapsedTimeTot[b].data.shift();\r\n                state.realTimeSchemaList.bufferGetsAvg[b].data.shift();\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n    },\r\n    SET_TIME_AND_CPU_LIST(state, data) {\r\n      let times = [];\r\n      let cpus = [];\r\n      data.forEach((element) => {\r\n        // let temp = element.time.split(' ');\r\n        // let f = temp[0].split('-');\r\n        // let s = temp[1].split(':');\r\n        // times.push(f[0]+'/'+f[1]+'/'+f[2]+'/'+s[0]+'/'+s[1]);\r\n        times.push(element.time);\r\n        cpus.push(element.databaseCpuTimeRatio);\r\n      });\r\n      state.timeAndCpuList.time = times;\r\n      state.timeAndCpuList.cpu = cpus;\r\n      state.timeAndCpuList.check = true;\r\n    },\r\n    SET_PAST_TIME_DATA(state, data) {\r\n      state.pastTimeData.oracleStatus = data.oracleStatus;\r\n      let tempstat = {};\r\n      let tempsch = {};\r\n      let list = [];\r\n      let radar = [];\r\n      data.allSchemaStastics.forEach((element) => {\r\n        tempstat[element.parsingSchemaName] = element;\r\n\r\n        radar.push({\r\n          value: [\r\n            element.bufferGetsAvg,\r\n            element.cpuTimeAvg,\r\n            element.cpuTimeMax,\r\n            element.cpuTimeTot,\r\n            element.sqlCnt\r\n          ],\r\n          name: element.parsingSchemaName\r\n        });\r\n        list.push(element.parsingSchemaName);\r\n      });\r\n      data.schemas.forEach((element) => {\r\n        tempsch[element.bufferGets[0].parsingSchemaName] = element;\r\n      });\r\n      state.pastTimeData.allSchemaStastics = tempstat;\r\n      state.pastTimeData.schemas = tempsch;\r\n      state.pastTimeData.radarchart = radar;\r\n      state.pastTimeData.schemaList = list;\r\n      state.pastTimeData.check = true;\r\n    }\r\n  },\r\n  actions: {\r\n    getSettingSchema({ commit }) {\r\n      axios.get(SERVER.URL + SERVER.ROUTES.getSettingsSchema).then((res) => {\r\n        commit(\"SET_SCHEMA_LIST\", res.data.map.schema);\r\n      });\r\n    },\r\n\r\n    setTimeAndCpuList({ commit, dispatch }, { start, end }) {\r\n      axios\r\n        .get(SERVER.URL + SERVER.ROUTES.getPastData + `${start}${end}`)\r\n        .then((res) => {\r\n          if (res.data.result === \"empty\") {\r\n            alert(\"data not exist\");\r\n          } else if (res.data.result === \"success\") {\r\n            commit(\"SET_TIME_AND_CPU_LIST\", res.data.map.timeAndCpuList);\r\n            dispatch(\r\n              \"setPastTimeData\",\r\n              res.data.map.timeAndCpuList[\r\n                res.data.map.timeAndCpuList.length - 1\r\n              ].time\r\n            );\r\n          }\r\n        })\r\n        .catch((err) => console.log(err));\r\n    },\r\n    setPastTimeData({ commit }, date) {\r\n      axios\r\n        .get(SERVER.URL + SERVER.ROUTES.getPastData + \"/\" + date)\r\n        .then((res) => {\r\n          if (res.data.result === \"notExist\") {\r\n            alert(\"data not exist\");\r\n          }\r\n          if (res.data.result === \"success\") {\r\n            commit(\"SET_PAST_TIME_DATA\", res.data.map.realTimeMonitoring);\r\n          }\r\n        })\r\n        .catch((err) => console.log(err));\r\n    }\r\n  }\r\n};\r\nexport default Schema;\r\n"]}]}