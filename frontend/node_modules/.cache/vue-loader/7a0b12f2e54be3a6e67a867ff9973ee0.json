{"remainingRequest":"D:\\s03p31b303\\frontend\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\s03p31b303\\frontend\\src\\components\\realtime-monitoring\\schema-status\\AllSchemaStastics.vue?vue&type=style&index=0&lang=css&","dependencies":[{"path":"D:\\s03p31b303\\frontend\\src\\components\\realtime-monitoring\\schema-status\\AllSchemaStastics.vue","mtime":1605230449818},{"path":"D:\\s03p31b303\\frontend\\node_modules\\css-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\s03p31b303\\frontend\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":499162500000},{"path":"D:\\s03p31b303\\frontend\\node_modules\\postcss-loader\\src\\index.js","mtime":499162500000},{"path":"D:\\s03p31b303\\frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\s03p31b303\\frontend\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCg0KLnNjaGVtYS1jaGFydC1ib3ggew0KICBkaXNwbGF5OiBmbGV4Ow0KICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWJldHdlZW47DQogIGhlaWdodDogMzAwcHg7DQp9DQouc2NoZW1hLWNoYXJ0LWJveCA+IGRpdiB7DQogIHdpZHRoOiAyMiU7DQogIG1pbi13aWR0aDogMjIwcHg7DQp9DQouc2NoZW1hLWNoYXJ0LXNpemUgew0KICBoZWlnaHQ6IDI1MHB4Ow0KfQ0K"},{"version":3,"sources":["AllSchemaStastics.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA2YA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"AllSchemaStastics.vue","sourceRoot":"src/components/realtime-monitoring/schema-status","sourcesContent":["<template>\r\n  <div>\r\n    <div style=\"display: flex; justify-content: space-between\">\r\n      <div style=\"display: flex\">\r\n        <h2 class=\"mt-2 mr-3\">Schema Status</h2>\r\n        <v-btn-toggle\r\n          group\r\n          mandatory\r\n          color=\"#2196F3\"\r\n          v-model=\"toggle_exclusive\"\r\n        >\r\n          <v-btn @click=\"changeChart('line')\" style=\"margin: 4px 0px;\"\r\n            ><v-icon>mdi-chart-line</v-icon></v-btn\r\n          >\r\n          <v-btn @click=\"changeChart('pie')\" style=\"margin: 4px 0px;\"\r\n            ><v-icon>mdi-chart-pie</v-icon></v-btn\r\n          >\r\n        </v-btn-toggle>\r\n      </div>\r\n      <v-menu transition=\"slide-y-transition\" :close-on-content-click=\"false\">\r\n        <template v-slot:activator=\"{ on, attrs }\">\r\n          <v-btn v-bind=\"attrs\" v-on=\"on\" fab x-small class=\"mt-2\">\r\n            <v-icon>mdi-playlist-plus</v-icon>\r\n          </v-btn>\r\n        </template>\r\n        <v-list dense>\r\n          <v-list-item\r\n            v-for=\"(item, i) in items\"\r\n            :key=\"i\"\r\n            @click=\"toggleCheckBox(i)\"\r\n          >\r\n            <v-list-item-icon>\r\n              <v-icon v-text=\"item.iconTrue\" v-if=\"item.isShow\"></v-icon>\r\n              <v-icon v-text=\"item.iconFalse\" v-else></v-icon>\r\n            </v-list-item-icon>\r\n            <v-list-item-content>\r\n              <v-list-item-title v-text=\"item.title\"></v-list-item-title>\r\n            </v-list-item-content>\r\n          </v-list-item>\r\n        </v-list>\r\n      </v-menu>\r\n    </div>\r\n    <div class=\"schema-chart-box\">\r\n      <div v-if=\"items[0].isShow\">\r\n        <h4>Executions(times)</h4>\r\n        <v-card elevation=\"2\" class=\"schema-chart-size\">\r\n          <IEcharts :option=\"option1\" />\r\n          <IEcharts :option=\"pie1\" />\r\n        </v-card>\r\n      </div>\r\n      <div v-if=\"items[1].isShow\">\r\n        <h4>CpuTimeTotal(%)</h4>\r\n        <v-card elevation=\"2\" class=\"schema-chart-size\">\r\n          <IEcharts :option=\"option2\" />\r\n        </v-card>\r\n      </div>\r\n      <div v-if=\"items[2].isShow\">\r\n        <h4>ElapsedTimeTotal(%)</h4>\r\n        <v-card elevation=\"2\" class=\"schema-chart-size\">\r\n          <IEcharts :option=\"option3\" />\r\n        </v-card>\r\n      </div>\r\n      <div v-if=\"items[3].isShow\">\r\n        <h4>BufferGetsAvg</h4>\r\n        <v-card elevation=\"2\" class=\"schema-chart-size\">\r\n          <IEcharts :option=\"option4\" />\r\n        </v-card>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { mapGetters } from \"vuex\";\r\nimport IEcharts from \"vue-echarts-v3/src/full.js\";\r\nimport axios from \"axios\";\r\nimport SERVER from \"@/api/spring.js\";\r\n\r\nexport default {\r\n  name: \"AllSchemaStastice\",\r\n  components: {\r\n    IEcharts\r\n  },\r\n  data() {\r\n    return {\r\n      items: [\r\n        {\r\n          title: \"Executions\",\r\n          isShow: true,\r\n          iconTrue: \"mdi-checkbox-marked-circle-outline\",\r\n          iconFalse: \"mdi-checkbox-blank-circle-outline\"\r\n        },\r\n        {\r\n          title: \"CpuTimeTotal\",\r\n          isShow: true,\r\n          iconTrue: \"mdi-checkbox-marked-circle-outline\",\r\n          iconFalse: \"mdi-checkbox-blank-circle-outline\"\r\n        },\r\n        {\r\n          title: \"ElapsedTimeTotal\",\r\n          isShow: true,\r\n          iconTrue: \"mdi-checkbox-marked-circle-outline\",\r\n          iconFalse: \"mdi-checkbox-blank-circle-outline\"\r\n        },\r\n        {\r\n          title: \"BufferGetsAvg\",\r\n          isShow: true,\r\n          iconTrue: \"mdi-checkbox-marked-circle-outline\",\r\n          iconFalse: \"mdi-checkbox-blank-circle-outline\"\r\n        }\r\n      ],\r\n      pie1: {\r\n        series: [\r\n          {\r\n            name: \"半径模式\",\r\n            type: \"pie\",\r\n            radius: [30, 100],\r\n            roseType: \"radius\",\r\n            label: {\r\n              show: false\r\n            },\r\n            emphasis: {\r\n              label: {\r\n                show: true\r\n              }\r\n            },\r\n            data: []\r\n          }\r\n        ]\r\n      },\r\n      option1: {\r\n        tooltip: {\r\n          trigger: \"axis\"\r\n        },\r\n        legend: {\r\n          type: \"scroll\",\r\n          data: []\r\n        },\r\n        grid: {\r\n          left: \"3%\",\r\n          right: \"4%\",\r\n          bottom: \"3%\",\r\n          containLabel: true\r\n        },\r\n        xAxis: {\r\n          type: \"category\",\r\n          boundaryGap: false,\r\n          data: []\r\n        },\r\n        yAxis: {\r\n          min: function(value) {\r\n            return value.min - value.min * 0.05;\r\n          },\r\n          max: function(value) {\r\n            return value.max + value.max * 0.05;\r\n          }\r\n        },\r\n        series: []\r\n      },\r\n      option2: {\r\n        tooltip: {\r\n          trigger: \"axis\"\r\n        },\r\n        legend: {\r\n          type: \"scroll\",\r\n          data: []\r\n        },\r\n        grid: {\r\n          left: \"3%\",\r\n          right: \"4%\",\r\n          bottom: \"3%\",\r\n          containLabel: true\r\n        },\r\n        xAxis: {\r\n          type: \"category\",\r\n          boundaryGap: false,\r\n          data: []\r\n        },\r\n        yAxis: {\r\n          min: function(value) {\r\n            return (value.min - value.min * 0.05).toFixed(2);\r\n          },\r\n          max: function(value) {\r\n            return (value.max + value.max * 0.05).toFixed(2);\r\n          }\r\n        },\r\n        series: []\r\n      },\r\n      option3: {\r\n        tooltip: {\r\n          trigger: \"axis\"\r\n        },\r\n        legend: {\r\n          type: \"scroll\",\r\n          data: []\r\n        },\r\n        grid: {\r\n          left: \"3%\",\r\n          right: \"4%\",\r\n          bottom: \"3%\",\r\n          containLabel: true\r\n        },\r\n        xAxis: {\r\n          type: \"category\",\r\n          boundaryGap: false,\r\n          data: []\r\n        },\r\n        yAxis: {\r\n          min: function(value) {\r\n            return (value.min - value.min * 0.05).toFixed(2);\r\n          },\r\n          max: function(value) {\r\n            return (value.max + value.max * 0.05).toFixed(2);\r\n          }\r\n        },\r\n        series: []\r\n      },\r\n      option4: {\r\n        tooltip: {\r\n          trigger: \"axis\"\r\n        },\r\n        legend: {\r\n          type: \"scroll\",\r\n          data: []\r\n        },\r\n        grid: {\r\n          left: \"3%\",\r\n          right: \"4%\",\r\n          bottom: \"3%\",\r\n          containLabel: true\r\n        },\r\n        xAxis: {\r\n          type: \"category\",\r\n          boundaryGap: false,\r\n          data: []\r\n        },\r\n        yAxis: {\r\n          min: function(value) {\r\n            return value.min - value.min * 0.05;\r\n          },\r\n          max: function(value) {\r\n            return value.max + value.max * 0.05;\r\n          }\r\n        },\r\n        series: []\r\n      }\r\n    };\r\n  },\r\n  methods: {\r\n    toggleCheckBox(index) {\r\n      if (this.items[index].isShow === true) {\r\n        this.items[index].isShow = false;\r\n      } else {\r\n        this.items[index].isShow = true;\r\n      }\r\n    },\r\n    changeChart(type) {\r\n      if (type === \"line\") {\r\n        console.log(\"line\");\r\n      } else if (type === \"pie\") {\r\n        // this.option1.tooltip = {\r\n        //   trigger: \"item\",\r\n        //   formatter: \"{a} <br/>{b} : {c} ({d}%)\"\r\n        // };\r\n        // for(var i=0; i<this.option1.series.length; i++){\r\n        //   this.option1.series[i].type = 'pie'\r\n        //   this.option1.series[i].radius\r\n        // }\r\n\r\n        // delete option1.xAxis;\r\n        // delete option1.yAxis;\r\n\r\n        this.option1.series = [\r\n          {\r\n            name: \"半径模式\",\r\n            type: \"pie\",\r\n            radius: [30, 100],\r\n            roseType: \"radius\",\r\n            label: {\r\n              show: false\r\n            },\r\n            emphasis: {\r\n              label: {\r\n                show: true\r\n              }\r\n            },\r\n            data: []\r\n          }\r\n        ];\r\n        // for (var i = 0; i < this.getRealTimeSchemaList1.length; i++) {\r\n        //   this.option1.series[0].data.push({\r\n        //     value: this.getRealTimeSchemaList1[i].data[\r\n        //       this.getRealTimeSchemaList1.length - 1\r\n        //     ],\r\n        //     name: this.getRealTimeSchemaList1[i].name\r\n        //   });\r\n        //   console.log(this.option1.series[0].data[i]);\r\n        // }\r\n      }\r\n    }\r\n  },\r\n  computed: {\r\n    ...mapGetters(\"Schema\", [\r\n      \"getRealTimeSchemaList1\",\r\n      \"getRealTimeSchemaList2\",\r\n      \"getRealTimeSchemaList3\",\r\n      \"getRealTimeSchemaList4\",\r\n      \"getSchemaList\"\r\n    ]),\r\n    ...mapGetters([\"getRealTime\", \"getRealTimeList\"])\r\n  },\r\n  watch: {\r\n    getRealTimeSchemaList1: {\r\n      deep: true,\r\n      handler() {\r\n        var legendList = [];\r\n        for (var i = 0; i < this.getRealTimeSchemaList1.length; i++) {\r\n          legendList.push(this.getRealTimeSchemaList1[i].name);\r\n          this.option1.series[i].name = this.getRealTimeSchemaList1[i].name;\r\n          this.option1.series[i].data = this.getRealTimeSchemaList1[i].data;\r\n        }\r\n        this.option1.legend.data = legendList;\r\n        this.option1.xAxis.data = this.getRealTimeList;\r\n      }\r\n    },\r\n    getRealTimeSchemaList2: {\r\n      deep: true,\r\n      handler() {\r\n        var legendList = [];\r\n        for (var i = 0; i < this.getRealTimeSchemaList2.length; i++) {\r\n          legendList.push(this.getRealTimeSchemaList2[i].name);\r\n          this.option2.series[i].name = this.getRealTimeSchemaList2[i].name;\r\n          this.option2.series[i].data = this.getRealTimeSchemaList2[i].data;\r\n        }\r\n        this.option2.legend.data = legendList;\r\n        this.option2.xAxis.data = this.getRealTimeList;\r\n      }\r\n    },\r\n    getRealTimeSchemaList3: {\r\n      deep: true,\r\n      handler() {\r\n        var legendList = [];\r\n        for (var i = 0; i < this.getRealTimeSchemaList3.length; i++) {\r\n          legendList.push(this.getRealTimeSchemaList3[i].name);\r\n          this.option3.series[i].name = this.getRealTimeSchemaList3[i].name;\r\n          this.option3.series[i].data = this.getRealTimeSchemaList3[i].data;\r\n        }\r\n        this.option3.legend.data = legendList;\r\n        this.option3.xAxis.data = this.getRealTimeList;\r\n      }\r\n    },\r\n    getRealTimeSchemaList4: {\r\n      deep: true,\r\n      handler() {\r\n        var legendList = [];\r\n        for (var i = 0; i < this.getRealTimeSchemaList4.length; i++) {\r\n          legendList.push(this.getRealTimeSchemaList4[i].name);\r\n          this.option4.series[i].name = this.getRealTimeSchemaList4[i].name;\r\n          this.option4.series[i].data = this.getRealTimeSchemaList4[i].data;\r\n        }\r\n        this.option4.legend.data = legendList;\r\n        this.option4.xAxis.data = this.getRealTimeList;\r\n      }\r\n    }\r\n  },\r\n  created() {\r\n    axios.get(SERVER.URL + SERVER.ROUTES.getSettingsSchema).then((res) => {\r\n      for (var i = 0; i < res.data.map.schema.length; i++) {\r\n        this.option1.series.push({\r\n          name: \"\",\r\n          type: \"line\",\r\n          data: []\r\n        });\r\n        this.option2.series.push({\r\n          name: \"\",\r\n          type: \"line\",\r\n          data: []\r\n        });\r\n        this.option3.series.push({\r\n          name: \"\",\r\n          type: \"line\",\r\n          data: []\r\n        });\r\n        this.option4.series.push({\r\n          name: \"\",\r\n          type: \"line\",\r\n          data: []\r\n        });\r\n      }\r\n    });\r\n  }\r\n};\r\n</script>\r\n\r\n<style>\r\n.schema-chart-box {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  height: 300px;\r\n}\r\n.schema-chart-box > div {\r\n  width: 22%;\r\n  min-width: 220px;\r\n}\r\n.schema-chart-size {\r\n  height: 250px;\r\n}\r\n</style>\r\n"]}]}