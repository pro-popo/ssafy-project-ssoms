{"remainingRequest":"D:\\s03p31b303\\frontend\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\s03p31b303\\frontend\\src\\views\\admin\\RealTime.vue?vue&type=style&index=0&lang=css&","dependencies":[{"path":"D:\\s03p31b303\\frontend\\src\\views\\admin\\RealTime.vue","mtime":1605623137242},{"path":"D:\\s03p31b303\\frontend\\node_modules\\css-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\s03p31b303\\frontend\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":499162500000},{"path":"D:\\s03p31b303\\frontend\\node_modules\\postcss-loader\\src\\index.js","mtime":499162500000},{"path":"D:\\s03p31b303\\frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\s03p31b303\\frontend\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoNCi5yZWFsdGltZS1zZXR0aW5nIHsNCiAgZGlzcGxheTogZmxleDsNCiAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjsNCn0NCi5yZWFsdGltZS1zZXR0aW5nIC52LWJ0biB7DQogIGZvbnQtc2l6ZTogMTJweDsNCiAgZm9udC13ZWlnaHQ6IGJvbGQ7DQp9DQo="},{"version":3,"sources":["RealTime.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAmGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"RealTime.vue","sourceRoot":"src/views/admin","sourcesContent":["<template>\r\n  <div class=\"realtime-setting\">\r\n    <v-btn color=\"success\" outlined v-if=\"scheduler\" @click=\"connectScheduler\"\r\n      >실시간 모니터링 시작하기</v-btn\r\n    >\r\n\r\n    <v-btn color=\"error\" outlined v-if=\"!scheduler\" @click=\"disconnectScheduler\"\r\n      >실시간 모니터링 끝내기</v-btn\r\n    >\r\n    <v-btn\r\n      color=\"primary\"\r\n      style=\"margin-top:10px\"\r\n      outlined\r\n      @click=\"checkConnectScheduler\"\r\n      >실시간 모니터링 상태 확인</v-btn\r\n    >\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport axios from \"axios\";\r\nimport SERVER from \"@/api/spring.js\";\r\nexport default {\r\n  data() {\r\n    return {\r\n      scheduler: true\r\n    };\r\n  },\r\n  created() {\r\n    axios\r\n      .get(SERVER.URL + SERVER.ROUTES.scheduleStatus)\r\n      .then((res) => {\r\n        if (res.data.result == \"running\") {\r\n          this.scheduler = false;\r\n          console.log(\"현재 실시간 모니터링이 시작된 상태 입니다.\");\r\n        } else if (res.data.result == \"end\") {\r\n          this.scheduler = true;\r\n          console.log(\"현재 실시간 모니터링이 종료된 상태 입니다.\");\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  },\r\n  methods: {\r\n    // 실시간 모니터링 (나중에 삭제 예정)\r\n    connectScheduler() {\r\n      axios\r\n        .get(SERVER.URL + SERVER.ROUTES.scheduleStart)\r\n        .then((res) => {\r\n          if (res.data.result == \"success\") {\r\n            alert(\"실시간 모니터링이 시작 되었습니다.\");\r\n            this.scheduler = false;\r\n          } else if (res.data.result == \"fail\") {\r\n            alert(\r\n              \"실시간 모니터링 연결에 문제가 생겼습니다... 관리자에게 연락 부탁드립니다...\"\r\n            );\r\n          }\r\n        })\r\n        .catch((err) => {\r\n          console.log(err);\r\n        });\r\n    },\r\n    checkConnectScheduler() {\r\n      axios\r\n        .get(SERVER.URL + SERVER.ROUTES.scheduleStatus)\r\n        .then((res) => {\r\n          if (res.data.result == \"running\") {\r\n            alert(\"현재 실시간 모니터링이 시작된 상태 입니다.\");\r\n          } else if (res.data.result == \"end\") {\r\n            alert(\"현재 실시간 모니터링이 종료된 상태 입니다.\");\r\n          }\r\n        })\r\n        .catch((err) => {\r\n          console.log(err);\r\n        });\r\n    },\r\n    disconnectScheduler() {\r\n      axios\r\n        .get(SERVER.URL + SERVER.ROUTES.scheduleStop)\r\n        .then((res) => {\r\n          if (res.data.result == \"success\") {\r\n            alert(\"실시간 모니터링이 성공적으로 종료 되었습니다 !!\");\r\n            this.scheduler = true;\r\n          } else if (res.data.result == \"fail\") {\r\n            alert(\r\n              \"실시간 모니터링 종료에 문제가 생겼습니다... 관리자에게 연락 부탁드립니다...\"\r\n            );\r\n          }\r\n        })\r\n        .catch((err) => {\r\n          console.log(err);\r\n        });\r\n    }\r\n  }\r\n};\r\n</script>\r\n\r\n<style>\r\n.realtime-setting {\r\n  display: flex;\r\n  flex-direction: column;\r\n}\r\n.realtime-setting .v-btn {\r\n  font-size: 12px;\r\n  font-weight: bold;\r\n}\r\n</style>\r\n"]}]}