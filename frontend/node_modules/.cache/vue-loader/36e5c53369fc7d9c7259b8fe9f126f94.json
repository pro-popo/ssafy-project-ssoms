{"remainingRequest":"D:\\s03p31b303\\frontend\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\s03p31b303\\frontend\\src\\components\\main\\ReportModal.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\s03p31b303\\frontend\\src\\components\\main\\ReportModal.vue","mtime":1605691400516},{"path":"D:\\s03p31b303\\frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\s03p31b303\\frontend\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\s03p31b303\\frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\s03p31b303\\frontend\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KDQppbXBvcnQgaHRtbDJjYW52YXMgZnJvbSAnaHRtbDJjYW52YXMnOw0KaW1wb3J0IGpzUERGIGZyb20gJ2pzcGRmJzsNCg0KZXhwb3J0IGRlZmF1bHQgew0KICBuYW1lOiAiUmVwb3J0TW9kYWwiLA0KICBkYXRhKCkgew0KICAgIHJldHVybiB7DQogICAgICB0b1BkZjogW1tdLCBbXV0sDQogICAgICB0aXRsZXNfa29yOiBbIuyDgeyEuCIsICLsoITssrQiLCAi7Iqk7YKk66eI67OEIl0sDQogICAgICBlbGVtczogWw0KICAgICAgICAgICAgICAgIFsNCiAgICAgICAgICAgICAgICAgICAge3RleHQ6ICJPcmFjbGUgREIgU3RhdHVzIiwgdmFsdWU6ICJvcmFjbGVTdGF0dXMifSwNCiAgICAgICAgICAgICAgICAgICAge3RleHQ6ICJTY2hlbWEgU3RhdHVzIiwgdmFsdWU6ICJhbGxTY2hlbWFTdGF0aWNzIn0sDQogICAgICAgICAgICAgICAgICAgIHt0ZXh0OiAiVG9wIFF1ZXJ5IiwgdmFsdWU6ICJhbGxTY2hlbWFUb3BRdWVyeSJ9DQogICAgICAgICAgICAgICAgXSwNCiAgICAgICAgICAgICAgICBbDQogICAgICAgICAgICAgICAgICAgIHt0ZXh0OiAiU2NoZW1hIFN0YXR1cyIsIHZhbHVlOiJwYXN0TW9uaXRlcmluZyJ9LA0KICAgICAgICAgICAgICAgICAgICB7dGV4dDogIlRvcCBRdWVyeSIsIHZhbHVlOiJTY2hlbWFRdWVyeXMifQ0KICAgICAgICAgICAgICAgIF0NCiAgICAgICAgICAgIF0sDQogICAgfTsNCiAgfSwNCi8vICB3YXRjaDp7DQovLyAgICAgICckcm91dGUnKCl7DQovLyAgICAgICAgICBjb25zb2xlLmxvZyh0aGlzLiRyb3V0ZS5uYW1lKQ0KLy8gICAgICAgICAgaWYodGhpcy4kcm91dGUubmFtZSA9PSAiUmVhbFRpbWVNb25pdG9yaW5nIil7DQovLyAgICAgICAgICAgIHRoaXMuZWxlbXMgPSBbe3RleHQ6ICJPcmFjbGUgREIgU3RhdHVzIiwgdmFsdWU6ICJvcmFjbGVTdGF0dXMifSwNCi8vICAgICAgICAgICAgICAgICAgICB7dGV4dDogIlNjaGVtYSBTdGF0dXMiLCB2YWx1ZTogImFsbFNjaGVtYVN0YXRpY3MifSwNCi8vICAgICAgICAgICAgICAgICAgICB7dGV4dDogIlRvcCBRdWVyeSIsIHZhbHVlOiAiYWxsU2NoZW1hVG9wUXVlcnkifV0NCi8vICAgICAgICAgIH1lbHNlIGlmKHRoaXMuJHJvdXRlLm5hbWUgPT0gIlNjaGVtYU1vbml0b3JpbmciKXsNCi8vICAgICAgICAgICAgdGhpcy5lbGVtcyA9IFsNCi8vICAgICAgICAgICAgICAgIHt0ZXh0OiAiU2NoZW1hU3RhdHVzIiwgdmFsdWU6InBhc3RNb25pdGVyaW5nIn0sDQovLyAgICAgICAgICAgICAgICB7dGV4dDogIlRvcCBRdWVyeSIsIHZhbHVlOiJTY2hlbWFRdWVyeXMifQ0KLy8gICAgICAgICAgICBdDQovLyAgICAgICAgICB9DQovLyAgICAgIH0NCi8vICB9LA0KICBtZXRob2RzOiB7DQogICAgICBtYWtlYnRuKCl7DQogICAgICAgICAgaWYodGhpcy4kcm91dGUubmFtZSA9PSAnUmVhbFRpbWVNb25pdG9yaW5nJyl7DQogICAgICAgICAgICAgIHRoaXMudG9QZGZbMF0uZm9yRWFjaChlbGVtZW50ID0+IHsNCiAgICAgICAgICAgICAgICBpZiAoZWxlbWVudCA9PSAiYWxsU2NoZW1hVG9wUXVlcnkiKXsNCiAgICAgICAgICAgICAgICAgICAgdGhpcy5tYWtlUERGKFtkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnYWxsU2NoZW1hVG9wUXVlcnlUYWJsZScpLmZpcnN0RWxlbWVudENoaWxkLmZpcnN0RWxlbWVudENoaWxkXSwgZWxlbWVudCkNCiAgICAgICAgICAgICAgICB9ZWxzZXsNCiAgICAgICAgICAgICAgICAgICAgdGhpcy5tYWtlUERGKFtkb2N1bWVudC5nZXRFbGVtZW50QnlJZChlbGVtZW50KV0sIGVsZW1lbnQpDQogICAgICAgICAgICAgICAgfQ0KICAgICAgICAgICAgICB9KTsNCiAgICAgICAgICB9ZWxzZSBpZih0aGlzLiRyb3V0ZS5uYW1lID09ICdTY2hlbWFNb25pdG9yaW5nJyl7DQogICAgICAgICAgICAgIHRoaXMudG9QZGZbMV0uZm9yRWFjaChlbGVtZW50ID0+IHsNCiAgICAgICAgICAgICAgaWYoZWxlbWVudCA9PSAicGFzdE1vbml0ZXJpbmciKXsNCiAgICAgICAgICAgICAgICB0aGlzLm1ha2VQREYoW2RvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdTY2hlbWFXaG9sZScpLCBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnU2NoZW1hRGV0YWlsJyldLCBlbGVtZW50KQ0KICAgICAgICAgICAgICB9ZWxzZSBpZihlbGVtZW50ID09ICJTY2hlbWFRdWVyeXMiKXsNCiAgICAgICAgICAgICAgICB0aGlzLm1ha2VQREYoW2RvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdTY2hlbWFRdWVyeXMnKS5maXJzdEVsZW1lbnRDaGlsZC5maXJzdEVsZW1lbnRDaGlsZF0sIGVsZW1lbnQpDQogICAgICAgICAgICAgIH0NCiAgICAgICAgICAgIH0pOw0KICAgICAgICAgIH0NCiAgICAgICAgICANCiAgICAgIH0sDQogICAgICBtYWtlUERGKGVsZSwgbmFtZSkgew0KCQkJd2luZG93Lmh0bWwyY2FudmFzID0gaHRtbDJjYW52YXMNCiAgICAgICAgICAgIGxldCBwZGYgPSBuZXcganNQREYoJ3AnLCAnbW0nLCAnYTQnKTsNCiAgICAgICAgICAgIA0KCQkJaWYoIWVsZSl7DQoJCQkJY29uc29sZS53YXJuKCAnIGlzIG5vdCBleGlzdC4nKQ0KCQkJCXJldHVybiBmYWxzZQ0KICAgICAgICAgICAgfQ0KICAgICAgICAgICAgbGV0IGlkeCA9IDA7DQogICAgICAgICAgICBsZXQgYmVmb3JlaGVpZ2h0ID0gMDsNCiAgICAgICAgICAgIGVsZS5mb3JFYWNoKGVsZW1lbnQgPT4gew0KICAgICAgICAgICAgICAgIGxldCBjYW52YXMgPSBwZGYuY2FudmFzDQogICAgICAgICAgICAgICAgY29uc3QgcGFnZVdpZHRoID0gMjEwIC8v7LqU67KE7IqkIOuEiOu5hCBtbQ0KICAgICAgICAgICAgICAgIGNhbnZhcy53aWR0aCA9IHBhZ2VXaWR0aA0KICAgICAgICAgICAgICAgIGxldCB3aWR0aCA9IGVsZW1lbnQub2Zmc2V0V2lkdGggLy8g7IWA66CJ7Yq47ZWcIOyalOyGjOydmCBweCDrhIjruYQNCiAgICAgICAgICAgICAgICBsZXQgaGVpZ2h0ID0gZWxlbWVudC5vZmZzZXRIZWlnaHQgLy8g7IWA66CJ7Yq47ZWcIOyalOyGjOydmCBweCDrhpLsnbQNCiAgICAgICAgICAgICAgICBsZXQgaW1nSGVpZ2h0ID0gcGFnZVdpZHRoICogaGVpZ2h0L3dpZHRoIC8vIOydtOuvuOyngCDrhpLsnbTqsJIgcHggdG8gbW0g67OA7ZmYDQogICAgICAgICAgICAgICAgaHRtbDJjYW52YXMoZWxlbWVudCkudGhlbihjYW52YXMgPT4gew0KICAgICAgICAgICAgICAgICAgICBsZXQgaW1nRGF0YSA9IGNhbnZhcy50b0RhdGFVUkwoJ2ltYWdlL3BuZycpOw0KICAgICAgICAgICAgICAgICAgICBjb25zb2xlLmxvZyhiZWZvcmVoZWlnaHQpDQogICAgICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKGlkeCkNCiAgICAgICAgICAgICAgICAgICAgcGRmLmFkZEltYWdlKGltZ0RhdGEsICdwbmcnLCAwLCBiZWZvcmVoZWlnaHQsIHBhZ2VXaWR0aCwgaW1nSGVpZ2h0LCAnaW1hZ2UnK1N0cmluZyhpZHgpLCAnU0xPVycpOw0KICAgICAgICAgICAgICAgICAgICBjb25zb2xlLmxvZygic2F2ZSIpDQogICAgICAgICAgICAgICAgICAgIGlmKGlkeCA9PSBlbGUubGVuZ3RoIC0gMSl7DQogICAgICAgICAgICAgICAgICAgICAgICBsZXQgZGF0ZSA9IG5ldyBEYXRlKCk7DQogICAgICAgICAgICAgICAgICAgICAgICBwZGYuc2F2ZSggZGF0ZS5nZXRGdWxsWWVhcigpKyJfIitkYXRlLmdldE1vbnRoKCkrIl8iK2RhdGUuZ2V0RGF5KCkrIl8iK2RhdGUuZ2V0SG91cnMoKSsiXyIrZGF0ZS5nZXRNaW51dGVzKCkrIl8iK25hbWUrIi5wZGYiKQ0KICAgICAgICAgICAgICAgICAgICB9DQogICAgICAgICAgICAgICAgICAgIGlkeCsrOw0KICAgICAgICAgICAgICAgICAgICBiZWZvcmVoZWlnaHQgKz0gaW1nSGVpZ2h0Ow0KICAgICAgICAgICAgICAgIH0pLmNhdGNoKGVyciA9PiB7DQogICAgICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKGVycikNCiAgICAgICAgICAgICAgICB9KTsNCiAgICAgICAgICB9KTsNCiAgICAgICAgICAgIHRoaXMuJGVtaXQoJ2tpbGwtbW9kYWwnKQ0KCQl9LA0KICB9LA0KICBtb3VudGVkKCkgew0KICAgIA0KICB9DQp9Ow0K"},{"version":3,"sources":["ReportModal.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA4CA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA","file":"ReportModal.vue","sourceRoot":"src/components/main","sourcesContent":["<template>\r\n  <v-card>\r\n    <v-card-title>\r\n      <span class=\"headline\">PDF 저장</span>\r\n    </v-card-title>\r\n    <v-card-text>\r\n      <h3>출력 항목 선택</h3>\r\n      <v-container>\r\n        <v-row>\r\n          <v-col cols=\"12\">\r\n            <v-select\r\n              v-model=\"toPdf[0]\"\r\n              :items=\"elems[0]\"\r\n              chips\r\n              multiple\r\n              v-if=\"$route.name == 'RealTimeMonitoring'\"\r\n              outlined\r\n            ></v-select>\r\n            <v-select\r\n              v-model=\"toPdf[1]\"\r\n              :items=\"elems[1]\"\r\n              chips\r\n              multiple\r\n              v-if=\"$route.name == 'SchemaMonitoring'\"\r\n              outlined\r\n            ></v-select>\r\n          </v-col>\r\n        </v-row>\r\n      </v-container>\r\n      <small>*indicates required field</small>\r\n    </v-card-text>\r\n    <v-card-actions>\r\n      <v-spacer></v-spacer>\r\n      <v-btn color=\"blue darken-1\" text @click=\"$emit('kill-modal')\">\r\n        닫기\r\n      </v-btn>\r\n      <v-btn color=\"blue darken-1\" text @click=\"makebtn\">\r\n        저장\r\n      </v-btn>\r\n    </v-card-actions>\r\n  </v-card>\r\n</template>\r\n\r\n<script>\r\nimport html2canvas from 'html2canvas';\r\nimport jsPDF from 'jspdf';\r\n\r\nexport default {\r\n  name: \"ReportModal\",\r\n  data() {\r\n    return {\r\n      toPdf: [[], []],\r\n      titles_kor: [\"상세\", \"전체\", \"스키마별\"],\r\n      elems: [\r\n                [\r\n                    {text: \"Oracle DB Status\", value: \"oracleStatus\"},\r\n                    {text: \"Schema Status\", value: \"allSchemaStatics\"},\r\n                    {text: \"Top Query\", value: \"allSchemaTopQuery\"}\r\n                ],\r\n                [\r\n                    {text: \"Schema Status\", value:\"pastMonitering\"},\r\n                    {text: \"Top Query\", value:\"SchemaQuerys\"}\r\n                ]\r\n            ],\r\n    };\r\n  },\r\n//  watch:{\r\n//      '$route'(){\r\n//          console.log(this.$route.name)\r\n//          if(this.$route.name == \"RealTimeMonitoring\"){\r\n//            this.elems = [{text: \"Oracle DB Status\", value: \"oracleStatus\"},\r\n//                    {text: \"Schema Status\", value: \"allSchemaStatics\"},\r\n//                    {text: \"Top Query\", value: \"allSchemaTopQuery\"}]\r\n//          }else if(this.$route.name == \"SchemaMonitoring\"){\r\n//            this.elems = [\r\n//                {text: \"SchemaStatus\", value:\"pastMonitering\"},\r\n//                {text: \"Top Query\", value:\"SchemaQuerys\"}\r\n//            ]\r\n//          }\r\n//      }\r\n//  },\r\n  methods: {\r\n      makebtn(){\r\n          if(this.$route.name == 'RealTimeMonitoring'){\r\n              this.toPdf[0].forEach(element => {\r\n                if (element == \"allSchemaTopQuery\"){\r\n                    this.makePDF([document.getElementById('allSchemaTopQueryTable').firstElementChild.firstElementChild], element)\r\n                }else{\r\n                    this.makePDF([document.getElementById(element)], element)\r\n                }\r\n              });\r\n          }else if(this.$route.name == 'SchemaMonitoring'){\r\n              this.toPdf[1].forEach(element => {\r\n              if(element == \"pastMonitering\"){\r\n                this.makePDF([document.getElementById('SchemaWhole'), document.getElementById('SchemaDetail')], element)\r\n              }else if(element == \"SchemaQuerys\"){\r\n                this.makePDF([document.getElementById('SchemaQuerys').firstElementChild.firstElementChild], element)\r\n              }\r\n            });\r\n          }\r\n          \r\n      },\r\n      makePDF(ele, name) {\r\n\t\t\twindow.html2canvas = html2canvas\r\n            let pdf = new jsPDF('p', 'mm', 'a4');\r\n            \r\n\t\t\tif(!ele){\r\n\t\t\t\tconsole.warn( ' is not exist.')\r\n\t\t\t\treturn false\r\n            }\r\n            let idx = 0;\r\n            let beforeheight = 0;\r\n            ele.forEach(element => {\r\n                let canvas = pdf.canvas\r\n                const pageWidth = 210 //캔버스 너비 mm\r\n                canvas.width = pageWidth\r\n                let width = element.offsetWidth // 셀렉트한 요소의 px 너비\r\n                let height = element.offsetHeight // 셀렉트한 요소의 px 높이\r\n                let imgHeight = pageWidth * height/width // 이미지 높이값 px to mm 변환\r\n                html2canvas(element).then(canvas => {\r\n                    let imgData = canvas.toDataURL('image/png');\r\n                    console.log(beforeheight)\r\n                    console.log(idx)\r\n                    pdf.addImage(imgData, 'png', 0, beforeheight, pageWidth, imgHeight, 'image'+String(idx), 'SLOW');\r\n                    console.log(\"save\")\r\n                    if(idx == ele.length - 1){\r\n                        let date = new Date();\r\n                        pdf.save( date.getFullYear()+\"_\"+date.getMonth()+\"_\"+date.getDay()+\"_\"+date.getHours()+\"_\"+date.getMinutes()+\"_\"+name+\".pdf\")\r\n                    }\r\n                    idx++;\r\n                    beforeheight += imgHeight;\r\n                }).catch(err => {\r\n                    console.log(err)\r\n                });\r\n          });\r\n            this.$emit('kill-modal')\r\n\t\t},\r\n  },\r\n  mounted() {\r\n    \r\n  }\r\n};\r\n</script>\r\n\r\n<style>\r\n</style>"]}]}