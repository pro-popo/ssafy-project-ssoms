{"remainingRequest":"D:\\s03p31b303\\frontend\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\s03p31b303\\frontend\\src\\views\\Home.vue?vue&type=style&index=0&lang=css&","dependencies":[{"path":"D:\\s03p31b303\\frontend\\src\\views\\Home.vue","mtime":1605236853979},{"path":"D:\\s03p31b303\\frontend\\node_modules\\css-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\s03p31b303\\frontend\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":499162500000},{"path":"D:\\s03p31b303\\frontend\\node_modules\\postcss-loader\\src\\index.js","mtime":499162500000},{"path":"D:\\s03p31b303\\frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\s03p31b303\\frontend\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKDQouaG9tZS1jb250YWluZXIgew0KICBoZWlnaHQ6IDEwMHZoOw0KICBkaXNwbGF5OiBmbGV4Ow0KfQ0KLmhvbWUtbmF2YmFyIHsNCiAgd2lkdGg6IDEwMCU7DQp9DQouaG9tZS1zaWRlYmFyIHsNCiAgaGVpZ2h0OiAxMDAlOw0KfQ0KDQouaG9tZS1tYWluLWNvbnRhaW5lciB7DQogIGRpc3BsYXk6IGZsZXg7DQogIGZsZXg6IDEgMCAwOw0KICBmbGV4LWRpcmVjdGlvbjogY29sdW1uOw0KICB3aWR0aDogMTAwJTsNCiAgaGVpZ2h0OiAxMDB2aDsNCn0NCi5ob21lLW1haW4gew0KICB3aWR0aDogMTAwJTsNCiAgaGVpZ2h0OiAxMDAlOw0KICBvdmVyZmxvdy15OiBhdXRvOw0KICBvdmVyZmxvdy14OiBoaWRkZW47DQogIHBhZGRpbmc6IDQwcHggODBweDsNCn0NCg=="},{"version":3,"sources":["Home.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA0JA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Home.vue","sourceRoot":"src/views","sourcesContent":["<template>\r\n  <div class=\"home-container\">\r\n    <div class=\"home-sidebar\">\r\n      <AppSidebar :isAdmin=\"isAdmin\" @user-profile=\"getMyProfile\" />\r\n    </div>\r\n    <div class=\"home-main-container\">\r\n      <div class=\"home-navbar\">\r\n        <app-navbar />\r\n      </div>\r\n\r\n      <div class=\"home-main\">\r\n        <MyProfile\r\n          v-if=\"requestProfile\"\r\n          @close-profile=\"closeProfile\"\r\n          @edit-profile=\"showEditUser\"\r\n        />\r\n        <EditUser\r\n          v-if=\"requestEditUser\"\r\n          :profile=\"profile\"\r\n          @close-edit-profile=\"closeEditUser\"\r\n          @open-profile=\"requestProfile = !requestProfile\"\r\n        />\r\n        <AppMain :isAdmin=\"isAdmin\" />\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport AppNavbar from \"@/components/main/AppNavbar.vue\";\r\nimport AppSidebar from \"@/components/main/AppSidebar.vue\";\r\n\r\nimport AppMain from \"@/components/main/AppMain.vue\";\r\n\r\nimport MyProfile from \"@/components/account/MyProfile.vue\";\r\nimport EditUser from \"@/components/account/EditUser.vue\";\r\n\r\nimport SERVER from \"@/api/spring.js\";\r\nimport axios from \"axios\";\r\n\r\nimport Stomp from \"webstomp-client\";\r\nimport SockJS from \"sockjs-client\";\r\n\r\nimport { mapMutations, mapGetters } from \"vuex\";\r\n\r\nexport default {\r\n  name: \"Home\",\r\n  components: {\r\n    AppNavbar,\r\n    AppMain,\r\n    AppSidebar,\r\n\r\n    MyProfile,\r\n    EditUser\r\n  },\r\n  data() {\r\n    return {\r\n      isAdmin: null,\r\n      requestProfile: false,\r\n      requestEditUser: false,\r\n      profile: \"\"\r\n    };\r\n  },\r\n  methods: {\r\n    checkIsAdmin() {\r\n      axios\r\n        .get(\r\n          SERVER.URL +\r\n            SERVER.ROUTES.isAdmin +\r\n            sessionStorage.getItem(\"loginSession\")\r\n        )\r\n        .then((res) => {\r\n          if (res.data.result == \"no\") {\r\n            this.isAdmin = false;\r\n          } else {\r\n            this.isAdmin = true;\r\n          }\r\n        })\r\n        .catch((err) => {\r\n          console.log(err);\r\n        });\r\n    },\r\n    getMyProfile() {\r\n      this.requestProfile = true;\r\n    },\r\n    closeProfile() {\r\n      this.requestProfile = false;\r\n    },\r\n    showEditUser(data) {\r\n      this.requestEditUser = true;\r\n      this.profile = data;\r\n    },\r\n    closeEditUser() {\r\n      this.requestEditUser = false;\r\n    },\r\n    addRealtimeData(realTimeData) {\r\n      this.SET_ORACLE_STATUS_LIST(realTimeData.oracleStatus);\r\n      this.SET_TOPQUERY_LIST(realTimeData.allSchemaQueryInfo);\r\n\r\n      this.SET_REALTIME(realTimeData.time);\r\n      this.SET_REALTIME_SCHEMA_LIST(realTimeData.allSchemaStastics);\r\n    },\r\n    connect() {\r\n      const serverURL = \"http://localhost:8080/ssoms/stomp\";\r\n      let socket = new SockJS(serverURL);\r\n      this.stompClient = Stomp.over(socket);\r\n      // console.log(`소켓 연결을 시도합니다. 서버 주소: ${serverURL}`);\r\n      this.stompClient.connect(\r\n        {},\r\n        (frame) => {\r\n          this.connected = true;\r\n          frame;\r\n          this.stompClient.subscribe(\"/sendData/schedulerM\", (res) => {\r\n            const realTimeData = JSON.parse(res.body);\r\n            if (this.getRealTime !== realTimeData.time) {\r\n              if (this.getDatabaseCpuTimeRatioList.length >= 12) {\r\n                this.addRealtimeData(realTimeData);\r\n                this.SET_SELECTED_REALTIME(-1);\r\n              } else {\r\n                setTimeout(\r\n                  function() {\r\n                    this.addRealtimeData(realTimeData);\r\n                    this.SET_SELECTED_REALTIME(-1);\r\n                  }.bind(this),\r\n                  1000\r\n                );\r\n              }\r\n            }\r\n          });\r\n        },\r\n        (error) => {\r\n          // 소켓 연결 실패\r\n          console.log(\"소켓 연결 실패\", error);\r\n          this.connected = false;\r\n        }\r\n      );\r\n    },\r\n    ...mapMutations(\"Oracle\", [\"SET_ORACLE_STATUS_LIST\"]),\r\n    ...mapMutations(\"TopQuery\", [\"SET_TOPQUERY_LIST\"]),\r\n    ...mapMutations([\"SET_REALTIME\", \"SET_SELECTED_REALTIME\"]),\r\n    ...mapMutations(\"Schema\", [\"SET_REALTIME_SCHEMA_LIST\"])\r\n  },\r\n  created() {\r\n    this.checkIsAdmin();\r\n    this.connect();\r\n  },\r\n  computed: {\r\n    ...mapGetters([\"getRealTime\"]),\r\n    ...mapGetters(\"Oracle\", [\"getDatabaseCpuTimeRatioList\"])\r\n  }\r\n};\r\n</script>\r\n\r\n<style>\r\n.home-container {\r\n  height: 100vh;\r\n  display: flex;\r\n}\r\n.home-navbar {\r\n  width: 100%;\r\n}\r\n.home-sidebar {\r\n  height: 100%;\r\n}\r\n\r\n.home-main-container {\r\n  display: flex;\r\n  flex: 1 0 0;\r\n  flex-direction: column;\r\n  width: 100%;\r\n  height: 100vh;\r\n}\r\n.home-main {\r\n  width: 100%;\r\n  height: 100%;\r\n  overflow-y: auto;\r\n  overflow-x: hidden;\r\n  padding: 40px 80px;\r\n}\r\n</style>\r\n"]}]}