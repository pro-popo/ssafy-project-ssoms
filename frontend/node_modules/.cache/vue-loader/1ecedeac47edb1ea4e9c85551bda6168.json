{"remainingRequest":"D:\\s03p31b303\\frontend\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\s03p31b303\\frontend\\src\\components\\realtime-monitoring\\query\\AllSchemaTopQuery.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\s03p31b303\\frontend\\src\\components\\realtime-monitoring\\query\\AllSchemaTopQuery.vue","mtime":1605774413177},{"path":"D:\\s03p31b303\\frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\s03p31b303\\frontend\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\s03p31b303\\frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\s03p31b303\\frontend\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KDQppbXBvcnQgeyBtYXBHZXR0ZXJzLCBtYXBTdGF0ZSwgbWFwTXV0YXRpb25zIH0gZnJvbSAidnVleCI7DQppbXBvcnQgQWxsU2NoZW1hVG9wUXVlcnlEZXRhaWwgZnJvbSAiQC9jb21wb25lbnRzL3JlYWx0aW1lLW1vbml0b3JpbmcvcXVlcnkvQWxsU2NoZW1hVG9wUXVlcnlEZXRhaWwudnVlIjsNCg0KZXhwb3J0IGRlZmF1bHQgew0KICBuYW1lOiAiQWxsU2NoZW1hVG9wUXVlcnkiLA0KICBjb21wb25lbnRzOiB7DQogICAgQWxsU2NoZW1hVG9wUXVlcnlEZXRhaWwNCiAgfSwNCiAgZGF0YSgpIHsNCiAgICByZXR1cm4gew0KICAgICAgY2xpY2tSb3c6IC0xDQogICAgfTsNCiAgfSwNCg0KICBtZXRob2RzOiB7DQogICAgZ2V0UXVlcnlEZXRhaWwoc2VsZWN0ZWRSZWFsVGltZSwgaW5kZXgpIHsNCiAgICAgIGNvbnN0IHRyTGlzdCA9IGRvY3VtZW50DQogICAgICAgIC5nZXRFbGVtZW50QnlJZCgiYWxsU2NoZW1hVG9wUXVlcnlUYWJsZSIpDQogICAgICAgIC5nZXRFbGVtZW50c0J5VGFnTmFtZSgidHIiKTsNCiAgICAgIGlmICh0aGlzLmNsaWNrUm93ICE9IC0xKQ0KICAgICAgICB0ckxpc3RbdGhpcy5jbGlja1JvdyArIDFdLmNsYXNzTGlzdC5yZW1vdmUoInJlYWwtcXVlcnktY2xpY2stdHIiKTsNCg0KICAgICAgdHJMaXN0W2luZGV4ICsgMV0uY2xhc3NMaXN0LmFkZCgicmVhbC1xdWVyeS1jbGljay10ciIpOw0KICAgICAgdGhpcy5jbGlja1JvdyA9IGluZGV4Ow0KDQogICAgICB0aGlzLlNFVF9UT1BRVUVSWV9ERVRBSUwoW3NlbGVjdGVkUmVhbFRpbWUsIGluZGV4XSk7DQogICAgfSwNCiAgICAuLi5tYXBNdXRhdGlvbnMoIlRvcFF1ZXJ5IiwgWw0KICAgICAgIlNFVF9UT1BRVUVSWV9ERVRBSUwiLA0KICAgICAgIlNFVF9UT1BRVUVSWV9ERVRBSUxfRU1QVFkiDQogICAgXSkNCiAgfSwNCiAgY29tcHV0ZWQ6IHsNCiAgICAuLi5tYXBHZXR0ZXJzKCJUb3BRdWVyeSIsIFsiZ2V0VG9wUXVlcnlMaXN0Il0pLA0KICAgIC4uLm1hcFN0YXRlKCJUb3BRdWVyeSIsIFsid2F0Y2giXSksDQogICAgLi4ubWFwR2V0dGVycyhbInNlbGVjdGVkUmVhbFRpbWUiXSkNCiAgfSwNCiAgd2F0Y2g6IHsNCiAgICBnZXRUb3BRdWVyeUxpc3Q6IGZ1bmN0aW9uKCkgew0KICAgICAgdGhpcy5nZXRRdWVyeURldGFpbCh0aGlzLnNlbGVjdGVkUmVhbFRpbWUsIHRoaXMuY2xpY2tSb3cpOw0KICAgIH0sDQogICAgc2VsZWN0ZWRSZWFsVGltZTogZnVuY3Rpb24oKSB7DQogICAgICBjb25zdCB0ckxpc3QgPSBkb2N1bWVudA0KICAgICAgICAuZ2V0RWxlbWVudEJ5SWQoImFsbFNjaGVtYVRvcFF1ZXJ5VGFibGUiKQ0KICAgICAgICAuZ2V0RWxlbWVudHNCeVRhZ05hbWUoInRyIik7DQogICAgICBpZiAodGhpcy5jbGlja1JvdyAhPSAtMSkNCiAgICAgICAgdHJMaXN0W3RoaXMuY2xpY2tSb3cgKyAxXS5jbGFzc0xpc3QucmVtb3ZlKCJyZWFsLXF1ZXJ5LWNsaWNrLXRyIik7DQogICAgICB0aGlzLlNFVF9UT1BRVUVSWV9ERVRBSUxfRU1QVFkoKTsNCiAgICB9DQogIH0NCn07DQo="},{"version":3,"sources":["AllSchemaTopQuery.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAkDA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"AllSchemaTopQuery.vue","sourceRoot":"src/components/realtime-monitoring/query","sourcesContent":["<template>\r\n  <div>\r\n    <h2 class=\"mb-3 mt-3\">\r\n      All Schema'<span style=\"margin-left:3px\" />s CPU Top Query\r\n    </h2>\r\n    <v-simple-table\r\n      fixed-header\r\n      height=\"285px\"\r\n      class=\"elevation-2 realtime-top-query\"\r\n      id=\"allSchemaTopQueryTable\"\r\n    >\r\n      <template v-slot:default>\r\n        <thead style=\"border-radiu\">\r\n          <tr>\r\n            <th class=\"text-center topquery-table-th\">\r\n              Rank\r\n            </th>\r\n            <th class=\"text-left topquery-table-th\">\r\n              SQL ID\r\n            </th>\r\n            <th class=\"text-left topquery-table-th\">\r\n              SQL\r\n            </th>\r\n            <th class=\"text-left topquery-table-th\">\r\n              Schema Name\r\n            </th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          <tr\r\n            v-for=\"(query, index) in getTopQueryList[selectedRealTime]\"\r\n            :key=\"index\"\r\n            @click=\"getQueryDetail(selectedRealTime, index)\"\r\n            class=\"real-query-hover\"\r\n          >\r\n            <td class=\"text-center\" style=\"width:70px\">{{ index + 1 }}</td>\r\n            <td>{{ query.sqlId }}</td>\r\n            <td align=\"left\" class=\"query-table-sql\">\r\n              {{ query.sql }}\r\n            </td>\r\n            <td>{{ query.parsingSchemaName }}</td>\r\n          </tr>\r\n        </tbody>\r\n      </template>\r\n    </v-simple-table>\r\n    <AllSchemaTopQueryDetail class=\"top-query-right\" />\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { mapGetters, mapState, mapMutations } from \"vuex\";\r\nimport AllSchemaTopQueryDetail from \"@/components/realtime-monitoring/query/AllSchemaTopQueryDetail.vue\";\r\n\r\nexport default {\r\n  name: \"AllSchemaTopQuery\",\r\n  components: {\r\n    AllSchemaTopQueryDetail\r\n  },\r\n  data() {\r\n    return {\r\n      clickRow: -1\r\n    };\r\n  },\r\n\r\n  methods: {\r\n    getQueryDetail(selectedRealTime, index) {\r\n      const trList = document\r\n        .getElementById(\"allSchemaTopQueryTable\")\r\n        .getElementsByTagName(\"tr\");\r\n      if (this.clickRow != -1)\r\n        trList[this.clickRow + 1].classList.remove(\"real-query-click-tr\");\r\n\r\n      trList[index + 1].classList.add(\"real-query-click-tr\");\r\n      this.clickRow = index;\r\n\r\n      this.SET_TOPQUERY_DETAIL([selectedRealTime, index]);\r\n    },\r\n    ...mapMutations(\"TopQuery\", [\r\n      \"SET_TOPQUERY_DETAIL\",\r\n      \"SET_TOPQUERY_DETAIL_EMPTY\"\r\n    ])\r\n  },\r\n  computed: {\r\n    ...mapGetters(\"TopQuery\", [\"getTopQueryList\"]),\r\n    ...mapState(\"TopQuery\", [\"watch\"]),\r\n    ...mapGetters([\"selectedRealTime\"])\r\n  },\r\n  watch: {\r\n    getTopQueryList: function() {\r\n      this.getQueryDetail(this.selectedRealTime, this.clickRow);\r\n    },\r\n    selectedRealTime: function() {\r\n      const trList = document\r\n        .getElementById(\"allSchemaTopQueryTable\")\r\n        .getElementsByTagName(\"tr\");\r\n      if (this.clickRow != -1)\r\n        trList[this.clickRow + 1].classList.remove(\"real-query-click-tr\");\r\n      this.SET_TOPQUERY_DETAIL_EMPTY();\r\n    }\r\n  }\r\n};\r\n</script>\r\n\r\n<style>\r\n.real-query-click-tr {\r\n  background: rgb(214, 214, 214);\r\n}\r\n.realtime-top-query {\r\n  width: 100%;\r\n}\r\n.real-query-hover:hover {\r\n  cursor: pointer;\r\n}\r\n\r\n.topquery-table-th {\r\n  color: white !important;\r\n  background: #414141 !important;\r\n}\r\n.topquery-table-th:nth-child(1) {\r\n  border-top-left-radius: 5px !important;\r\n}\r\n.query-table-sql {\r\n  max-width: 600px;\r\n  overflow: hidden;\r\n  text-overflow: ellipsis;\r\n  white-space: nowrap;\r\n}\r\n</style>\r\n"]}]}